<?xml version="1.0" encoding="utf-8"?><html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><head xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><meta name="vs_targetSchema" content="http://schemas.microsoft.com/intellisense/ie5" /><link rel="stylesheet" href="sqlspec.css" /><title>MarketplaceCore - Database overview</title><script language="JavaScript" src="resort_table.js"></script><script language="javascript">
//
// this hides the SVG if you are on IE, 
// and hides the VML if you are NOT on IE.
//
function init()
{
  var isIE = navigator.userAgent.indexOf("MSIE") != -1;
  showhideIfIE('FK_SVG', isIE, true);
  showhideIfIE('DEPENDENCY_SVG', isIE, true);
  showhideIfIE('MODEL_SVG', isIE, true); 
  showhideIfIE('FK_VML', isIE, false);
  showhideIfIE('DEPENDENCY_VML', isIE, false);
  showhideIfIE('MODEL_VML', isIE, false);
  
  var node = document.getElementById('copy_url_div');
  if (node != null)
  {
    var inChm = document.URL.indexOf('mk:@MSITStore') != -1;
    node.style.display = inChm || !isIE ? 'none' : 'block';
  }
}   

function showhideIfIE(elementName, isIE, hide)
{
  node = document.getElementById(elementName);
  if (node != null) 
  {
    if (hide) 
      node.style.display = isIE ? 'none' : 'block';
    else
      node.style.display = isIE ? 'block' : 'none';
  }
}

function copyToClipboard(s)
{
  if(window.clipboardData)
    if (clipboardData.setData)
      clipboardData.setData('text', s);
}
</script></head><body onload="init()"><div id="nsbanner" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><div id="bannerrow1"><table class="bannerparthead" cellspacing="0" id="Table1"><tr id="hdr"><td class="runninghead">Database reference - MarketplaceCore</td><td class="product" /></tr></table></div><div id="TitleRow"><h1 class="dtH1">Database overview</h1></div></div><div id="nstext"><h2 class="dtH2" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red">Evaluation</font></h2><p xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red"><b>This is an evaluation version of SqlSpec.  If you like SqlSpec, please consider upgrading to the full version.  Upgrade here:  <a target="_blank" href="http://elsasoft.com">Upgrade</a></b></font></p><h2 class="dtH2">Documentation</h2><p>Documentation generated on: 16.01.2018 16:46:06</p><h2 class="dtH2" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red">Evaluation</font></h2><p xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red"><b>This is an evaluation version of SqlSpec.  If you like SqlSpec, please consider upgrading to the full version.  Upgrade here:  <a target="_blank" href="http://elsasoft.com">Upgrade</a></b></font></p><h2 class="dtH2">Database objects</h2><table class="dtTABLE"><thead><tr valign="top"><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">type</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)" sortType="number">count</th></tr></thead><tbody><tr valign="top"><td><a href="allTables.htm">tables</a></td><td>22</td></tr><tr valign="top"><td>views</td><td>0</td></tr><tr valign="top"><td>materialized views</td><td>0</td></tr><tr valign="top"><td><a href="allIndexes.htm">indexes</a></td><td>24</td></tr><tr valign="top"><td><a href="allUDFs.htm">functions</a></td><td>67</td></tr><tr valign="top"><td><a href="allUDTs.htm">types</a></td><td>24</td></tr><tr valign="top"><td>domains</td><td>0</td></tr><tr valign="top"><td>triggers</td><td>0</td></tr><tr valign="top"><td><a href="allSequences.htm">sequences</a></td><td>17</td></tr></tbody></table><h2 class="dtH2" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red">Evaluation</font></h2><p xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red"><b>This is an evaluation version of SqlSpec.  If you like SqlSpec, please consider upgrading to the full version.  Upgrade here:  <a target="_blank" href="http://elsasoft.com">Upgrade</a></b></font></p><h2 class="dtH2">Server options</h2><table class="dtTABLE"><thead><tr valign="top"><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">name</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">value</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">category</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">context</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">comment</th></tr></thead><tbody><tr valign="top"><td>autovacuum 
                        </td><td>on </td><td>Autovacuum 
                        </td><td>sighup 
                        </td><td>Starts the autovacuum subprocess. 
                        </td></tr><tr valign="top"><td>autovacuum_analyze_scale_factor 
                        </td><td>0.1 </td><td>Autovacuum 
                        </td><td>sighup 
                        </td><td>Number of tuple inserts, updates, or deletes prior to analyze as a fraction of reltuples. 
                        </td></tr><tr valign="top"><td>autovacuum_analyze_threshold 
                        </td><td>50 </td><td>Autovacuum 
                        </td><td>sighup 
                        </td><td>Minimum number of tuple inserts, updates, or deletes prior to analyze. 
                        </td></tr><tr valign="top"><td>autovacuum_freeze_max_age 
                        </td><td>200000000 </td><td>Autovacuum 
                        </td><td>postmaster 
                        </td><td>Age at which to autovacuum a table to prevent transaction ID wraparound. 
                        </td></tr><tr valign="top"><td>autovacuum_max_workers 
                        </td><td>3 </td><td>Autovacuum 
                        </td><td>postmaster 
                        </td><td>Sets the maximum number of simultaneously running autovacuum worker processes. 
                        </td></tr><tr valign="top"><td>autovacuum_multixact_freeze_max_age 
                        </td><td>400000000 </td><td>Autovacuum 
                        </td><td>postmaster 
                        </td><td>Multixact age at which to autovacuum a table to prevent multixact wraparound. 
                        </td></tr><tr valign="top"><td>autovacuum_naptime 
                        </td><td>60 s</td><td>Autovacuum 
                        </td><td>sighup 
                        </td><td>Time to sleep between autovacuum runs. 
                        </td></tr><tr valign="top"><td>autovacuum_vacuum_cost_delay 
                        </td><td>20 ms</td><td>Autovacuum 
                        </td><td>sighup 
                        </td><td>Vacuum cost delay in milliseconds, for autovacuum. 
                        </td></tr><tr valign="top"><td>autovacuum_vacuum_cost_limit 
                        </td><td>-1 </td><td>Autovacuum 
                        </td><td>sighup 
                        </td><td>Vacuum cost amount available before napping, for autovacuum. 
                        </td></tr><tr valign="top"><td>autovacuum_vacuum_scale_factor 
                        </td><td>0.2 </td><td>Autovacuum 
                        </td><td>sighup 
                        </td><td>Number of tuple updates or deletes prior to vacuum as a fraction of reltuples. 
                        </td></tr><tr valign="top"><td>autovacuum_vacuum_threshold 
                        </td><td>50 </td><td>Autovacuum 
                        </td><td>sighup 
                        </td><td>Minimum number of tuple updates or deletes prior to vacuum. 
                        </td></tr><tr valign="top"><td>client_encoding 
                        </td><td>WIN1252 </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>Sets the client's character set encoding. 
                        </td></tr><tr valign="top"><td>DateStyle 
                        </td><td>ISO, DMY </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>Also controls interpretation of ambiguous date inputs. 
                        </td></tr><tr valign="top"><td>default_text_search_config 
                        </td><td>pg_catalog.german </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>Sets default text search configuration. 
                        </td></tr><tr valign="top"><td>extra_float_digits 
                        </td><td>2 </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>This affects real, double precision, and geometric data types. The parameter value is added to the standard number of digits (FLT_DIG or DBL_DIG as appropriate). 
                        </td></tr><tr valign="top"><td>IntervalStyle 
                        </td><td>postgres </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>Sets the display format for interval values. 
                        </td></tr><tr valign="top"><td>lc_collate 
                        </td><td>German_Germany.1252 </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>internal 
                        </td><td>Shows the collation order locale. 
                        </td></tr><tr valign="top"><td>lc_ctype 
                        </td><td>German_Germany.1252 </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>internal 
                        </td><td>Shows the character classification and case conversion locale. 
                        </td></tr><tr valign="top"><td>lc_messages 
                        </td><td>German_Germany.1252 </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>superuser 
                        </td><td>Sets the language in which messages are displayed. 
                        </td></tr><tr valign="top"><td>lc_monetary 
                        </td><td>German_Germany.1252 </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>Sets the locale for formatting monetary amounts. 
                        </td></tr><tr valign="top"><td>lc_numeric 
                        </td><td>German_Germany.1252 </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>Sets the locale for formatting numbers. 
                        </td></tr><tr valign="top"><td>lc_time 
                        </td><td>German_Germany.1252 </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>Sets the locale for formatting date and time values. 
                        </td></tr><tr valign="top"><td>server_encoding 
                        </td><td>UTF8 </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>internal 
                        </td><td>Sets the server (database) character set encoding. 
                        </td></tr><tr valign="top"><td>TimeZone 
                        </td><td>CET </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>Sets the time zone for displaying and interpreting time stamps. 
                        </td></tr><tr valign="top"><td>timezone_abbreviations 
                        </td><td>Default </td><td>Client Connection Defaults / Locale and Formatting 
                        </td><td>user 
                        </td><td>Selects a file of time zone abbreviations. 
                        </td></tr><tr valign="top"><td>dynamic_library_path 
                        </td><td>$libdir </td><td>Client Connection Defaults / Other Defaults 
                        </td><td>superuser 
                        </td><td>If a dynamically loadable module needs to be opened and the specified name does not have a directory component (i.e., the name does not contain a slash), the system will search this path for the specified file. 
                        </td></tr><tr valign="top"><td>gin_fuzzy_search_limit 
                        </td><td>0 </td><td>Client Connection Defaults / Other Defaults 
                        </td><td>user 
                        </td><td>Sets the maximum allowed result for exact search by GIN. 
                        </td></tr><tr valign="top"><td>tcp_keepalives_count 
                        </td><td>0 </td><td>Client Connection Defaults / Other Defaults 
                        </td><td>user 
                        </td><td>This controls the number of consecutive keepalive retransmits that can be lost before a connection is considered dead. A value of 0 uses the system default. 
                        </td></tr><tr valign="top"><td>tcp_keepalives_idle 
                        </td><td>-1 s</td><td>Client Connection Defaults / Other Defaults 
                        </td><td>user 
                        </td><td>A value of 0 uses the system default. 
                        </td></tr><tr valign="top"><td>tcp_keepalives_interval 
                        </td><td>-1 s</td><td>Client Connection Defaults / Other Defaults 
                        </td><td>user 
                        </td><td>A value of 0 uses the system default. 
                        </td></tr><tr valign="top"><td>local_preload_libraries 
                        </td><td> </td><td>Client Connection Defaults / Shared Library Preloading 
                        </td><td>user 
                        </td><td>Lists unprivileged shared libraries to preload into each backend. 
                        </td></tr><tr valign="top"><td>session_preload_libraries 
                        </td><td> </td><td>Client Connection Defaults / Shared Library Preloading 
                        </td><td>superuser 
                        </td><td>Lists shared libraries to preload into each backend. 
                        </td></tr><tr valign="top"><td>shared_preload_libraries 
                        </td><td> </td><td>Client Connection Defaults / Shared Library Preloading 
                        </td><td>postmaster 
                        </td><td>Lists shared libraries to preload into server. 
                        </td></tr><tr valign="top"><td>bytea_output 
                        </td><td>hex </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets the output format for bytea. 
                        </td></tr><tr valign="top"><td>check_function_bodies 
                        </td><td>on </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Check function bodies during CREATE FUNCTION. 
                        </td></tr><tr valign="top"><td>default_tablespace 
                        </td><td> </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>An empty string selects the database's default tablespace. 
                        </td></tr><tr valign="top"><td>default_transaction_deferrable 
                        </td><td>off </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets the default deferrable status of new transactions. 
                        </td></tr><tr valign="top"><td>default_transaction_isolation 
                        </td><td>read committed </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets the transaction isolation level of each new transaction. 
                        </td></tr><tr valign="top"><td>default_transaction_read_only 
                        </td><td>off </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets the default read-only status of new transactions. 
                        </td></tr><tr valign="top"><td>gin_pending_list_limit 
                        </td><td>4096 kB</td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets the maximum size of the pending list for GIN index. 
                        </td></tr><tr valign="top"><td>idle_in_transaction_session_timeout 
                        </td><td>0 ms</td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>A value of 0 turns off the timeout. 
                        </td></tr><tr valign="top"><td>lock_timeout 
                        </td><td>0 ms</td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>A value of 0 turns off the timeout. 
                        </td></tr><tr valign="top"><td>search_path 
                        </td><td>"$user", public </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets the schema search order for names that are not schema-qualified. 
                        </td></tr><tr valign="top"><td>session_replication_role 
                        </td><td>origin </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>superuser 
                        </td><td>Sets the session's behavior for triggers and rewrite rules. 
                        </td></tr><tr valign="top"><td>statement_timeout 
                        </td><td>60000 ms</td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>A value of 0 turns off the timeout. 
                        </td></tr><tr valign="top"><td>temp_tablespaces 
                        </td><td> </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets the tablespace(s) to use for temporary tables and sort files. 
                        </td></tr><tr valign="top"><td>transaction_deferrable 
                        </td><td>off </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Whether to defer a read-only serializable transaction until it can be executed with no possible serialization failures. 
                        </td></tr><tr valign="top"><td>transaction_isolation 
                        </td><td>read committed </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets the current transaction's isolation level. 
                        </td></tr><tr valign="top"><td>transaction_read_only 
                        </td><td>off </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets the current transaction's read-only status. 
                        </td></tr><tr valign="top"><td>vacuum_freeze_min_age 
                        </td><td>50000000 </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Minimum age at which VACUUM should freeze a table row. 
                        </td></tr><tr valign="top"><td>vacuum_freeze_table_age 
                        </td><td>150000000 </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Age at which VACUUM should scan whole table to freeze tuples. 
                        </td></tr><tr valign="top"><td>vacuum_multixact_freeze_min_age 
                        </td><td>5000000 </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Minimum age at which VACUUM should freeze a MultiXactId in a table row. 
                        </td></tr><tr valign="top"><td>vacuum_multixact_freeze_table_age 
                        </td><td>150000000 </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Multixact age at which VACUUM should scan whole table to freeze tuples. 
                        </td></tr><tr valign="top"><td>xmlbinary 
                        </td><td>base64 </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets how binary values are to be encoded in XML. 
                        </td></tr><tr valign="top"><td>xmloption 
                        </td><td>content </td><td>Client Connection Defaults / Statement Behavior 
                        </td><td>user 
                        </td><td>Sets whether XML data in implicit parsing and serialization operations is to be considered as documents or content fragments. 
                        </td></tr><tr valign="top"><td>bonjour 
                        </td><td>off </td><td>Connections and Authentication / Connection Settings 
                        </td><td>postmaster 
                        </td><td>Enables advertising the server via Bonjour. 
                        </td></tr><tr valign="top"><td>bonjour_name 
                        </td><td> </td><td>Connections and Authentication / Connection Settings 
                        </td><td>postmaster 
                        </td><td>Sets the Bonjour service name. 
                        </td></tr><tr valign="top"><td>listen_addresses 
                        </td><td>* </td><td>Connections and Authentication / Connection Settings 
                        </td><td>postmaster 
                        </td><td>Sets the host name or IP address(es) to listen to. 
                        </td></tr><tr valign="top"><td>max_connections 
                        </td><td>100 </td><td>Connections and Authentication / Connection Settings 
                        </td><td>postmaster 
                        </td><td>Sets the maximum number of concurrent connections. 
                        </td></tr><tr valign="top"><td>port 
                        </td><td>5432 </td><td>Connections and Authentication / Connection Settings 
                        </td><td>postmaster 
                        </td><td>Sets the TCP port the server listens on. 
                        </td></tr><tr valign="top"><td>superuser_reserved_connections 
                        </td><td>3 </td><td>Connections and Authentication / Connection Settings 
                        </td><td>postmaster 
                        </td><td>Sets the number of connection slots reserved for superusers. 
                        </td></tr><tr valign="top"><td>unix_socket_directories 
                        </td><td> </td><td>Connections and Authentication / Connection Settings 
                        </td><td>postmaster 
                        </td><td>Sets the directories where Unix-domain sockets will be created. 
                        </td></tr><tr valign="top"><td>unix_socket_group 
                        </td><td> </td><td>Connections and Authentication / Connection Settings 
                        </td><td>postmaster 
                        </td><td>The owning user of the socket is always the user that starts the server. 
                        </td></tr><tr valign="top"><td>unix_socket_permissions 
                        </td><td>0777 </td><td>Connections and Authentication / Connection Settings 
                        </td><td>postmaster 
                        </td><td>Unix-domain sockets use the usual Unix file system permission set. The parameter value is expected to be a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).) 
                        </td></tr><tr valign="top"><td>authentication_timeout 
                        </td><td>60 s</td><td>Connections and Authentication / Security and Authentication 
                        </td><td>sighup 
                        </td><td>Sets the maximum allowed time to complete client authentication. 
                        </td></tr><tr valign="top"><td>db_user_namespace 
                        </td><td>off </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>sighup 
                        </td><td>Enables per-database user names. 
                        </td></tr><tr valign="top"><td>krb_caseins_users 
                        </td><td>off </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>sighup 
                        </td><td>Sets whether Kerberos and GSSAPI user names should be treated as case-insensitive. 
                        </td></tr><tr valign="top"><td>krb_server_keyfile 
                        </td><td> </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>sighup 
                        </td><td>Sets the location of the Kerberos server key file. 
                        </td></tr><tr valign="top"><td>password_encryption 
                        </td><td>on </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>user 
                        </td><td>When a password is specified in CREATE USER or ALTER USER without writing either ENCRYPTED or UNENCRYPTED, this parameter determines whether the password is to be encrypted. 
                        </td></tr><tr valign="top"><td>row_security 
                        </td><td>on </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>user 
                        </td><td>When enabled, row security will be applied to all users. 
                        </td></tr><tr valign="top"><td>ssl 
                        </td><td>off </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>postmaster 
                        </td><td>Enables SSL connections. 
                        </td></tr><tr valign="top"><td>ssl_ca_file 
                        </td><td> </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>postmaster 
                        </td><td>Location of the SSL certificate authority file. 
                        </td></tr><tr valign="top"><td>ssl_cert_file 
                        </td><td>server.crt </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>postmaster 
                        </td><td>Location of the SSL server certificate file. 
                        </td></tr><tr valign="top"><td>ssl_ciphers 
                        </td><td>HIGH:MEDIUM:+3DES:!aNULL </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>postmaster 
                        </td><td>Sets the list of allowed SSL ciphers. 
                        </td></tr><tr valign="top"><td>ssl_crl_file 
                        </td><td> </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>postmaster 
                        </td><td>Location of the SSL certificate revocation list file. 
                        </td></tr><tr valign="top"><td>ssl_ecdh_curve 
                        </td><td>prime256v1 </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>postmaster 
                        </td><td>Sets the curve to use for ECDH. 
                        </td></tr><tr valign="top"><td>ssl_key_file 
                        </td><td>server.key </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>postmaster 
                        </td><td>Location of the SSL server private key file. 
                        </td></tr><tr valign="top"><td>ssl_prefer_server_ciphers 
                        </td><td>on </td><td>Connections and Authentication / Security and Authentication 
                        </td><td>postmaster 
                        </td><td>Give priority to server ciphersuite order. 
                        </td></tr><tr valign="top"><td>allow_system_table_mods 
                        </td><td>off </td><td>Developer Options 
                        </td><td>postmaster 
                        </td><td>Allows modifications of the structure of system tables. 
                        </td></tr><tr valign="top"><td>ignore_checksum_failure 
                        </td><td>off </td><td>Developer Options 
                        </td><td>superuser 
                        </td><td>Detection of a checksum failure normally causes PostgreSQL to report an error, aborting the current transaction. Setting ignore_checksum_failure to true causes the system to ignore the failure (but still report a warning), and continue processing. This behavior could cause crashes or other serious problems. Only has an effect if checksums are enabled. 
                        </td></tr><tr valign="top"><td>ignore_system_indexes 
                        </td><td>off </td><td>Developer Options 
                        </td><td>backend 
                        </td><td>It does not prevent updating the indexes, so it is safe to use.  The worst consequence is slowness. 
                        </td></tr><tr valign="top"><td>post_auth_delay 
                        </td><td>0 s</td><td>Developer Options 
                        </td><td>backend 
                        </td><td>This allows attaching a debugger to the process. 
                        </td></tr><tr valign="top"><td>pre_auth_delay 
                        </td><td>0 s</td><td>Developer Options 
                        </td><td>sighup 
                        </td><td>This allows attaching a debugger to the process. 
                        </td></tr><tr valign="top"><td>trace_notify 
                        </td><td>off </td><td>Developer Options 
                        </td><td>user 
                        </td><td>Generates debugging output for LISTEN and NOTIFY. 
                        </td></tr><tr valign="top"><td>trace_recovery_messages 
                        </td><td>log </td><td>Developer Options 
                        </td><td>sighup 
                        </td><td>Each level includes all the levels that follow it. The later the level, the fewer messages are sent. 
                        </td></tr><tr valign="top"><td>trace_sort 
                        </td><td>off </td><td>Developer Options 
                        </td><td>user 
                        </td><td>Emit information about resource usage in sorting. 
                        </td></tr><tr valign="top"><td>zero_damaged_pages 
                        </td><td>off </td><td>Developer Options 
                        </td><td>superuser 
                        </td><td>Detection of a damaged page header normally causes PostgreSQL to report an error, aborting the current transaction. Setting zero_damaged_pages to true causes the system to instead report a warning, zero out the damaged page, and continue processing. This behavior will destroy data, namely all the rows on the damaged page. 
                        </td></tr><tr valign="top"><td>exit_on_error 
                        </td><td>off </td><td>Error Handling 
                        </td><td>user 
                        </td><td>Terminate session on any error. 
                        </td></tr><tr valign="top"><td>restart_after_crash 
                        </td><td>on </td><td>Error Handling 
                        </td><td>sighup 
                        </td><td>Reinitialize server after backend crash. 
                        </td></tr><tr valign="top"><td>config_file 
                        </td><td>C:/Program Files/PostgreSQL/9.6/data/postgresql.conf </td><td>File Locations 
                        </td><td>postmaster 
                        </td><td>Sets the server's main configuration file. 
                        </td></tr><tr valign="top"><td>data_directory 
                        </td><td>C:/Program Files/PostgreSQL/9.6/data </td><td>File Locations 
                        </td><td>postmaster 
                        </td><td>Sets the server's data directory. 
                        </td></tr><tr valign="top"><td>external_pid_file 
                        </td><td> </td><td>File Locations 
                        </td><td>postmaster 
                        </td><td>Writes the postmaster PID to the specified file. 
                        </td></tr><tr valign="top"><td>hba_file 
                        </td><td>C:/Program Files/PostgreSQL/9.6/data/pg_hba.conf </td><td>File Locations 
                        </td><td>postmaster 
                        </td><td>Sets the server's "hba" configuration file. 
                        </td></tr><tr valign="top"><td>ident_file 
                        </td><td>C:/Program Files/PostgreSQL/9.6/data/pg_ident.conf </td><td>File Locations 
                        </td><td>postmaster 
                        </td><td>Sets the server's "ident" configuration file. 
                        </td></tr><tr valign="top"><td>deadlock_timeout 
                        </td><td>1000 ms</td><td>Lock Management 
                        </td><td>superuser 
                        </td><td>Sets the time to wait on a lock before checking for deadlock. 
                        </td></tr><tr valign="top"><td>max_locks_per_transaction 
                        </td><td>64 </td><td>Lock Management 
                        </td><td>postmaster 
                        </td><td>The shared lock table is sized on the assumption that at most max_locks_per_transaction * max_connections distinct objects will need to be locked at any one time. 
                        </td></tr><tr valign="top"><td>max_pred_locks_per_transaction 
                        </td><td>64 </td><td>Lock Management 
                        </td><td>postmaster 
                        </td><td>The shared predicate lock table is sized on the assumption that at most max_pred_locks_per_transaction * max_connections distinct objects will need to be locked at any one time. 
                        </td></tr><tr valign="top"><td>block_size 
                        </td><td>8192 </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows the size of a disk block. 
                        </td></tr><tr valign="top"><td>data_checksums 
                        </td><td>off </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows whether data checksums are turned on for this cluster. 
                        </td></tr><tr valign="top"><td>debug_assertions 
                        </td><td>off </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows whether the running server has assertion checks enabled. 
                        </td></tr><tr valign="top"><td>integer_datetimes 
                        </td><td>on </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Datetimes are integer based. 
                        </td></tr><tr valign="top"><td>max_function_args 
                        </td><td>100 </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows the maximum number of function arguments. 
                        </td></tr><tr valign="top"><td>max_identifier_length 
                        </td><td>63 </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows the maximum identifier length. 
                        </td></tr><tr valign="top"><td>max_index_keys 
                        </td><td>32 </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows the maximum number of index keys. 
                        </td></tr><tr valign="top"><td>segment_size 
                        </td><td>131072 8kB</td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows the number of pages per disk file. 
                        </td></tr><tr valign="top"><td>server_version 
                        </td><td>9.6.2 </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows the server version. 
                        </td></tr><tr valign="top"><td>server_version_num 
                        </td><td>90602 </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows the server version as an integer. 
                        </td></tr><tr valign="top"><td>wal_block_size 
                        </td><td>8192 </td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows the block size in the write ahead log. 
                        </td></tr><tr valign="top"><td>wal_segment_size 
                        </td><td>2048 8kB</td><td>Preset Options 
                        </td><td>internal 
                        </td><td>Shows the number of pages per write ahead log segment. 
                        </td></tr><tr valign="top"><td>cluster_name 
                        </td><td> </td><td>Process Title 
                        </td><td>postmaster 
                        </td><td>Sets the name of the cluster, which is included in the process title. 
                        </td></tr><tr valign="top"><td>update_process_title 
                        </td><td>off </td><td>Process Title 
                        </td><td>superuser 
                        </td><td>Enables updating of the process title every time a new SQL command is received by the server. 
                        </td></tr><tr valign="top"><td>geqo 
                        </td><td>on </td><td>Query Tuning / Genetic Query Optimizer 
                        </td><td>user 
                        </td><td>This algorithm attempts to do planning without exhaustive searching. 
                        </td></tr><tr valign="top"><td>geqo_effort 
                        </td><td>5 </td><td>Query Tuning / Genetic Query Optimizer 
                        </td><td>user 
                        </td><td>GEQO: effort is used to set the default for other GEQO parameters. 
                        </td></tr><tr valign="top"><td>geqo_generations 
                        </td><td>0 </td><td>Query Tuning / Genetic Query Optimizer 
                        </td><td>user 
                        </td><td>Zero selects a suitable default value. 
                        </td></tr><tr valign="top"><td>geqo_pool_size 
                        </td><td>0 </td><td>Query Tuning / Genetic Query Optimizer 
                        </td><td>user 
                        </td><td>Zero selects a suitable default value. 
                        </td></tr><tr valign="top"><td>geqo_seed 
                        </td><td>0 </td><td>Query Tuning / Genetic Query Optimizer 
                        </td><td>user 
                        </td><td>GEQO: seed for random path selection. 
                        </td></tr><tr valign="top"><td>geqo_selection_bias 
                        </td><td>2 </td><td>Query Tuning / Genetic Query Optimizer 
                        </td><td>user 
                        </td><td>GEQO: selective pressure within the population. 
                        </td></tr><tr valign="top"><td>geqo_threshold 
                        </td><td>12 </td><td>Query Tuning / Genetic Query Optimizer 
                        </td><td>user 
                        </td><td>Sets the threshold of FROM items beyond which GEQO is used. 
                        </td></tr><tr valign="top"><td>constraint_exclusion 
                        </td><td>partition </td><td>Query Tuning / Other Planner Options 
                        </td><td>user 
                        </td><td>Table scans will be skipped if their constraints guarantee that no rows match the query. 
                        </td></tr><tr valign="top"><td>cursor_tuple_fraction 
                        </td><td>0.1 </td><td>Query Tuning / Other Planner Options 
                        </td><td>user 
                        </td><td>Sets the planner's estimate of the fraction of a cursor's rows that will be retrieved. 
                        </td></tr><tr valign="top"><td>default_statistics_target 
                        </td><td>100 </td><td>Query Tuning / Other Planner Options 
                        </td><td>user 
                        </td><td>This applies to table columns that have not had a column-specific target set via ALTER TABLE SET STATISTICS. 
                        </td></tr><tr valign="top"><td>force_parallel_mode 
                        </td><td>off </td><td>Query Tuning / Other Planner Options 
                        </td><td>user 
                        </td><td>If possible, run query using a parallel worker and with parallel restrictions. 
                        </td></tr><tr valign="top"><td>from_collapse_limit 
                        </td><td>8 </td><td>Query Tuning / Other Planner Options 
                        </td><td>user 
                        </td><td>The planner will merge subqueries into upper queries if the resulting FROM list would have no more than this many items. 
                        </td></tr><tr valign="top"><td>join_collapse_limit 
                        </td><td>8 </td><td>Query Tuning / Other Planner Options 
                        </td><td>user 
                        </td><td>The planner will flatten explicit JOIN constructs into lists of FROM items whenever a list of no more than this many items would result. 
                        </td></tr><tr valign="top"><td>cpu_index_tuple_cost 
                        </td><td>0.005 </td><td>Query Tuning / Planner Cost Constants 
                        </td><td>user 
                        </td><td>Sets the planner's estimate of the cost of processing each index entry during an index scan. 
                        </td></tr><tr valign="top"><td>cpu_operator_cost 
                        </td><td>0.0025 </td><td>Query Tuning / Planner Cost Constants 
                        </td><td>user 
                        </td><td>Sets the planner's estimate of the cost of processing each operator or function call. 
                        </td></tr><tr valign="top"><td>cpu_tuple_cost 
                        </td><td>0.01 </td><td>Query Tuning / Planner Cost Constants 
                        </td><td>user 
                        </td><td>Sets the planner's estimate of the cost of processing each tuple (row). 
                        </td></tr><tr valign="top"><td>effective_cache_size 
                        </td><td>524288 8kB</td><td>Query Tuning / Planner Cost Constants 
                        </td><td>user 
                        </td><td>That is, the portion of the kernel's disk cache that will be used for PostgreSQL data files. This is measured in disk pages, which are normally 8 kB each. 
                        </td></tr><tr valign="top"><td>min_parallel_relation_size 
                        </td><td>1024 8kB</td><td>Query Tuning / Planner Cost Constants 
                        </td><td>user 
                        </td><td>Sets the minimum size of relations to be considered for parallel scan. 
                        </td></tr><tr valign="top"><td>parallel_setup_cost 
                        </td><td>1000 </td><td>Query Tuning / Planner Cost Constants 
                        </td><td>user 
                        </td><td>Sets the planner's estimate of the cost of starting up worker processes for parallel query. 
                        </td></tr><tr valign="top"><td>parallel_tuple_cost 
                        </td><td>0.1 </td><td>Query Tuning / Planner Cost Constants 
                        </td><td>user 
                        </td><td>Sets the planner's estimate of the cost of passing each tuple (row) from worker to master backend. 
                        </td></tr><tr valign="top"><td>random_page_cost 
                        </td><td>4 </td><td>Query Tuning / Planner Cost Constants 
                        </td><td>user 
                        </td><td>Sets the planner's estimate of the cost of a nonsequentially fetched disk page. 
                        </td></tr><tr valign="top"><td>seq_page_cost 
                        </td><td>1 </td><td>Query Tuning / Planner Cost Constants 
                        </td><td>user 
                        </td><td>Sets the planner's estimate of the cost of a sequentially fetched disk page. 
                        </td></tr><tr valign="top"><td>enable_bitmapscan 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of bitmap-scan plans. 
                        </td></tr><tr valign="top"><td>enable_hashagg 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of hashed aggregation plans. 
                        </td></tr><tr valign="top"><td>enable_hashjoin 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of hash join plans. 
                        </td></tr><tr valign="top"><td>enable_indexonlyscan 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of index-only-scan plans. 
                        </td></tr><tr valign="top"><td>enable_indexscan 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of index-scan plans. 
                        </td></tr><tr valign="top"><td>enable_material 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of materialization. 
                        </td></tr><tr valign="top"><td>enable_mergejoin 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of merge join plans. 
                        </td></tr><tr valign="top"><td>enable_nestloop 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of nested-loop join plans. 
                        </td></tr><tr valign="top"><td>enable_seqscan 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of sequential-scan plans. 
                        </td></tr><tr valign="top"><td>enable_sort 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of explicit sort steps. 
                        </td></tr><tr valign="top"><td>enable_tidscan 
                        </td><td>on </td><td>Query Tuning / Planner Method Configuration 
                        </td><td>user 
                        </td><td>Enables the planner's use of TID scan plans. 
                        </td></tr><tr valign="top"><td>track_commit_timestamp 
                        </td><td>off </td><td>Replication 
                        </td><td>postmaster 
                        </td><td>Collects transaction commit time. 
                        </td></tr><tr valign="top"><td>synchronous_standby_names 
                        </td><td> </td><td>Replication / Master Server 
                        </td><td>sighup 
                        </td><td>Number of synchronous standbys and list of names of potential synchronous ones. 
                        </td></tr><tr valign="top"><td>vacuum_defer_cleanup_age 
                        </td><td>0 </td><td>Replication / Master Server 
                        </td><td>sighup 
                        </td><td>Number of transactions by which VACUUM and HOT cleanup should be deferred, if any. 
                        </td></tr><tr valign="top"><td>max_replication_slots 
                        </td><td>0 </td><td>Replication / Sending Servers 
                        </td><td>postmaster 
                        </td><td>Sets the maximum number of simultaneously defined replication slots. 
                        </td></tr><tr valign="top"><td>max_wal_senders 
                        </td><td>0 </td><td>Replication / Sending Servers 
                        </td><td>postmaster 
                        </td><td>Sets the maximum number of simultaneously running WAL sender processes. 
                        </td></tr><tr valign="top"><td>wal_keep_segments 
                        </td><td>0 </td><td>Replication / Sending Servers 
                        </td><td>sighup 
                        </td><td>Sets the number of WAL files held for standby servers. 
                        </td></tr><tr valign="top"><td>wal_sender_timeout 
                        </td><td>60000 ms</td><td>Replication / Sending Servers 
                        </td><td>sighup 
                        </td><td>Sets the maximum time to wait for WAL replication. 
                        </td></tr><tr valign="top"><td>hot_standby 
                        </td><td>off </td><td>Replication / Standby Servers 
                        </td><td>postmaster 
                        </td><td>Allows connections and queries during recovery. 
                        </td></tr><tr valign="top"><td>hot_standby_feedback 
                        </td><td>off </td><td>Replication / Standby Servers 
                        </td><td>sighup 
                        </td><td>Allows feedback from a hot standby to the primary that will avoid query conflicts. 
                        </td></tr><tr valign="top"><td>max_standby_archive_delay 
                        </td><td>30000 ms</td><td>Replication / Standby Servers 
                        </td><td>sighup 
                        </td><td>Sets the maximum delay before canceling queries when a hot standby server is processing archived WAL data. 
                        </td></tr><tr valign="top"><td>max_standby_streaming_delay 
                        </td><td>30000 ms</td><td>Replication / Standby Servers 
                        </td><td>sighup 
                        </td><td>Sets the maximum delay before canceling queries when a hot standby server is processing streamed WAL data. 
                        </td></tr><tr valign="top"><td>wal_receiver_status_interval 
                        </td><td>10 s</td><td>Replication / Standby Servers 
                        </td><td>sighup 
                        </td><td>Sets the maximum interval between WAL receiver status reports to the primary. 
                        </td></tr><tr valign="top"><td>wal_receiver_timeout 
                        </td><td>60000 ms</td><td>Replication / Standby Servers 
                        </td><td>sighup 
                        </td><td>Sets the maximum wait time to receive data from the primary. 
                        </td></tr><tr valign="top"><td>wal_retrieve_retry_interval 
                        </td><td>5000 ms</td><td>Replication / Standby Servers 
                        </td><td>sighup 
                        </td><td>Sets the time to wait before retrying to retrieve WAL after a failed attempt. 
                        </td></tr><tr valign="top"><td>application_name 
                        </td><td> </td><td>Reporting and Logging / What to Log 
                        </td><td>user 
                        </td><td>Sets the application name to be reported in statistics and logs. 
                        </td></tr><tr valign="top"><td>debug_pretty_print 
                        </td><td>on </td><td>Reporting and Logging / What to Log 
                        </td><td>user 
                        </td><td>Indents parse and plan tree displays. 
                        </td></tr><tr valign="top"><td>debug_print_parse 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>user 
                        </td><td>Logs each query's parse tree. 
                        </td></tr><tr valign="top"><td>debug_print_plan 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>user 
                        </td><td>Logs each query's execution plan. 
                        </td></tr><tr valign="top"><td>debug_print_rewritten 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>user 
                        </td><td>Logs each query's rewritten parse tree. 
                        </td></tr><tr valign="top"><td>log_autovacuum_min_duration 
                        </td><td>-1 ms</td><td>Reporting and Logging / What to Log 
                        </td><td>sighup 
                        </td><td>Zero prints all actions. -1 turns autovacuum logging off. 
                        </td></tr><tr valign="top"><td>log_checkpoints 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>sighup 
                        </td><td>Logs each checkpoint. 
                        </td></tr><tr valign="top"><td>log_connections 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>superuser-backend 
                        </td><td>Logs each successful connection. 
                        </td></tr><tr valign="top"><td>log_disconnections 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>superuser-backend 
                        </td><td>Logs end of a session, including duration. 
                        </td></tr><tr valign="top"><td>log_duration 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>superuser 
                        </td><td>Logs the duration of each completed SQL statement. 
                        </td></tr><tr valign="top"><td>log_error_verbosity 
                        </td><td>default </td><td>Reporting and Logging / What to Log 
                        </td><td>superuser 
                        </td><td>Sets the verbosity of logged messages. 
                        </td></tr><tr valign="top"><td>log_hostname 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>sighup 
                        </td><td>By default, connection logs only show the IP address of the connecting host. If you want them to show the host name you can turn this on, but depending on your host name resolution setup it might impose a non-negligible performance penalty. 
                        </td></tr><tr valign="top"><td>log_line_prefix 
                        </td><td>%t </td><td>Reporting and Logging / What to Log 
                        </td><td>sighup 
                        </td><td>If blank, no prefix is used. 
                        </td></tr><tr valign="top"><td>log_lock_waits 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>superuser 
                        </td><td>Logs long lock waits. 
                        </td></tr><tr valign="top"><td>log_replication_commands 
                        </td><td>off </td><td>Reporting and Logging / What to Log 
                        </td><td>superuser 
                        </td><td>Logs each replication command. 
                        </td></tr><tr valign="top"><td>log_statement 
                        </td><td>none </td><td>Reporting and Logging / What to Log 
                        </td><td>superuser 
                        </td><td>Sets the type of statements logged. 
                        </td></tr><tr valign="top"><td>log_temp_files 
                        </td><td>-1 kB</td><td>Reporting and Logging / What to Log 
                        </td><td>superuser 
                        </td><td>Zero logs all files. The default is -1 (turning this feature off). 
                        </td></tr><tr valign="top"><td>log_timezone 
                        </td><td>CET </td><td>Reporting and Logging / What to Log 
                        </td><td>sighup 
                        </td><td>Sets the time zone to use in log messages. 
                        </td></tr><tr valign="top"><td>client_min_messages 
                        </td><td>notice </td><td>Reporting and Logging / When to Log 
                        </td><td>user 
                        </td><td>Each level includes all the levels that follow it. The later the level, the fewer messages are sent. 
                        </td></tr><tr valign="top"><td>log_min_duration_statement 
                        </td><td>-1 ms</td><td>Reporting and Logging / When to Log 
                        </td><td>superuser 
                        </td><td>Zero prints all queries. -1 turns this feature off. 
                        </td></tr><tr valign="top"><td>log_min_error_statement 
                        </td><td>error </td><td>Reporting and Logging / When to Log 
                        </td><td>superuser 
                        </td><td>Each level includes all the levels that follow it. The later the level, the fewer messages are sent. 
                        </td></tr><tr valign="top"><td>log_min_messages 
                        </td><td>warning </td><td>Reporting and Logging / When to Log 
                        </td><td>superuser 
                        </td><td>Each level includes all the levels that follow it. The later the level, the fewer messages are sent. 
                        </td></tr><tr valign="top"><td>event_source 
                        </td><td>PostgreSQL </td><td>Reporting and Logging / Where to Log 
                        </td><td>postmaster 
                        </td><td>Sets the application name used to identify PostgreSQL messages in the event log. 
                        </td></tr><tr valign="top"><td>log_destination 
                        </td><td>stderr </td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Valid values are combinations of "stderr", "syslog", "csvlog", and "eventlog", depending on the platform. 
                        </td></tr><tr valign="top"><td>log_directory 
                        </td><td>pg_log </td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Can be specified as relative to the data directory or as absolute path. 
                        </td></tr><tr valign="top"><td>log_file_mode 
                        </td><td>0600 </td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>The parameter value is expected to be a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).) 
                        </td></tr><tr valign="top"><td>log_filename 
                        </td><td>postgresql-%Y-%m-%d_%H%M%S.log </td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Sets the file name pattern for log files. 
                        </td></tr><tr valign="top"><td>log_rotation_age 
                        </td><td>1440 min</td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Automatic log file rotation will occur after N minutes. 
                        </td></tr><tr valign="top"><td>log_rotation_size 
                        </td><td>10240 kB</td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Automatic log file rotation will occur after N kilobytes. 
                        </td></tr><tr valign="top"><td>log_truncate_on_rotation 
                        </td><td>off </td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Truncate existing log files of same name during log rotation. 
                        </td></tr><tr valign="top"><td>logging_collector 
                        </td><td>on </td><td>Reporting and Logging / Where to Log 
                        </td><td>postmaster 
                        </td><td>Start a subprocess to capture stderr output and/or csvlogs into log files. 
                        </td></tr><tr valign="top"><td>syslog_facility 
                        </td><td>none </td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Sets the syslog "facility" to be used when syslog enabled. 
                        </td></tr><tr valign="top"><td>syslog_ident 
                        </td><td>postgres </td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Sets the program name used to identify PostgreSQL messages in syslog. 
                        </td></tr><tr valign="top"><td>syslog_sequence_numbers 
                        </td><td>on </td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Add sequence number to syslog messages to avoid duplicate suppression. 
                        </td></tr><tr valign="top"><td>syslog_split_messages 
                        </td><td>on </td><td>Reporting and Logging / Where to Log 
                        </td><td>sighup 
                        </td><td>Split messages sent to syslog by lines and to fit into 1024 bytes. 
                        </td></tr><tr valign="top"><td>backend_flush_after 
                        </td><td>0 8kB</td><td>Resource Usage / Asynchronous Behavior 
                        </td><td>user 
                        </td><td>Number of pages after which previously performed writes are flushed to disk. 
                        </td></tr><tr valign="top"><td>effective_io_concurrency 
                        </td><td>0 </td><td>Resource Usage / Asynchronous Behavior 
                        </td><td>user 
                        </td><td>For RAID arrays, this should be approximately the number of drive spindles in the array. 
                        </td></tr><tr valign="top"><td>max_parallel_workers_per_gather 
                        </td><td>0 </td><td>Resource Usage / Asynchronous Behavior 
                        </td><td>user 
                        </td><td>Sets the maximum number of parallel processes per executor node. 
                        </td></tr><tr valign="top"><td>max_worker_processes 
                        </td><td>8 </td><td>Resource Usage / Asynchronous Behavior 
                        </td><td>postmaster 
                        </td><td>Maximum number of concurrent worker processes. 
                        </td></tr><tr valign="top"><td>old_snapshot_threshold 
                        </td><td>-1 min</td><td>Resource Usage / Asynchronous Behavior 
                        </td><td>postmaster 
                        </td><td>A value of -1 disables this feature. 
                        </td></tr><tr valign="top"><td>bgwriter_delay 
                        </td><td>200 ms</td><td>Resource Usage / Background Writer 
                        </td><td>sighup 
                        </td><td>Background writer sleep time between rounds. 
                        </td></tr><tr valign="top"><td>bgwriter_flush_after 
                        </td><td>0 8kB</td><td>Resource Usage / Background Writer 
                        </td><td>sighup 
                        </td><td>Number of pages after which previously performed writes are flushed to disk. 
                        </td></tr><tr valign="top"><td>bgwriter_lru_maxpages 
                        </td><td>100 </td><td>Resource Usage / Background Writer 
                        </td><td>sighup 
                        </td><td>Background writer maximum number of LRU pages to flush per round. 
                        </td></tr><tr valign="top"><td>bgwriter_lru_multiplier 
                        </td><td>2 </td><td>Resource Usage / Background Writer 
                        </td><td>sighup 
                        </td><td>Multiple of the average buffer usage to free per round. 
                        </td></tr><tr valign="top"><td>vacuum_cost_delay 
                        </td><td>0 ms</td><td>Resource Usage / Cost-Based Vacuum Delay 
                        </td><td>user 
                        </td><td>Vacuum cost delay in milliseconds. 
                        </td></tr><tr valign="top"><td>vacuum_cost_limit 
                        </td><td>200 </td><td>Resource Usage / Cost-Based Vacuum Delay 
                        </td><td>user 
                        </td><td>Vacuum cost amount available before napping. 
                        </td></tr><tr valign="top"><td>vacuum_cost_page_dirty 
                        </td><td>20 </td><td>Resource Usage / Cost-Based Vacuum Delay 
                        </td><td>user 
                        </td><td>Vacuum cost for a page dirtied by vacuum. 
                        </td></tr><tr valign="top"><td>vacuum_cost_page_hit 
                        </td><td>1 </td><td>Resource Usage / Cost-Based Vacuum Delay 
                        </td><td>user 
                        </td><td>Vacuum cost for a page found in the buffer cache. 
                        </td></tr><tr valign="top"><td>vacuum_cost_page_miss 
                        </td><td>10 </td><td>Resource Usage / Cost-Based Vacuum Delay 
                        </td><td>user 
                        </td><td>Vacuum cost for a page not found in the buffer cache. 
                        </td></tr><tr valign="top"><td>temp_file_limit 
                        </td><td>-1 kB</td><td>Resource Usage / Disk 
                        </td><td>superuser 
                        </td><td>-1 means no limit. 
                        </td></tr><tr valign="top"><td>max_files_per_process 
                        </td><td>1000 </td><td>Resource Usage / Kernel Resources 
                        </td><td>postmaster 
                        </td><td>Sets the maximum number of simultaneously open files for each server process. 
                        </td></tr><tr valign="top"><td>autovacuum_work_mem 
                        </td><td>-1 kB</td><td>Resource Usage / Memory 
                        </td><td>sighup 
                        </td><td>Sets the maximum memory to be used by each autovacuum worker process. 
                        </td></tr><tr valign="top"><td>dynamic_shared_memory_type 
                        </td><td>windows </td><td>Resource Usage / Memory 
                        </td><td>postmaster 
                        </td><td>Selects the dynamic shared memory implementation used. 
                        </td></tr><tr valign="top"><td>huge_pages 
                        </td><td>try </td><td>Resource Usage / Memory 
                        </td><td>postmaster 
                        </td><td>Use of huge pages on Linux. 
                        </td></tr><tr valign="top"><td>maintenance_work_mem 
                        </td><td>65536 kB</td><td>Resource Usage / Memory 
                        </td><td>user 
                        </td><td>This includes operations such as VACUUM and CREATE INDEX. 
                        </td></tr><tr valign="top"><td>max_prepared_transactions 
                        </td><td>0 </td><td>Resource Usage / Memory 
                        </td><td>postmaster 
                        </td><td>Sets the maximum number of simultaneously prepared transactions. 
                        </td></tr><tr valign="top"><td>max_stack_depth 
                        </td><td>2048 kB</td><td>Resource Usage / Memory 
                        </td><td>superuser 
                        </td><td>Sets the maximum stack depth, in kilobytes. 
                        </td></tr><tr valign="top"><td>replacement_sort_tuples 
                        </td><td>150000 </td><td>Resource Usage / Memory 
                        </td><td>user 
                        </td><td>When more tuples than this are present, quicksort will be used. 
                        </td></tr><tr valign="top"><td>shared_buffers 
                        </td><td>16384 8kB</td><td>Resource Usage / Memory 
                        </td><td>postmaster 
                        </td><td>Sets the number of shared memory buffers used by the server. 
                        </td></tr><tr valign="top"><td>temp_buffers 
                        </td><td>1024 8kB</td><td>Resource Usage / Memory 
                        </td><td>user 
                        </td><td>Sets the maximum number of temporary buffers used by each session. 
                        </td></tr><tr valign="top"><td>track_activity_query_size 
                        </td><td>1024 </td><td>Resource Usage / Memory 
                        </td><td>postmaster 
                        </td><td>Sets the size reserved for pg_stat_activity.query, in bytes. 
                        </td></tr><tr valign="top"><td>work_mem 
                        </td><td>4096 kB</td><td>Resource Usage / Memory 
                        </td><td>user 
                        </td><td>This much memory can be used by each internal sort operation and hash table before switching to temporary disk files. 
                        </td></tr><tr valign="top"><td>log_executor_stats 
                        </td><td>off </td><td>Statistics / Monitoring 
                        </td><td>superuser 
                        </td><td>Writes executor performance statistics to the server log. 
                        </td></tr><tr valign="top"><td>log_parser_stats 
                        </td><td>off </td><td>Statistics / Monitoring 
                        </td><td>superuser 
                        </td><td>Writes parser performance statistics to the server log. 
                        </td></tr><tr valign="top"><td>log_planner_stats 
                        </td><td>off </td><td>Statistics / Monitoring 
                        </td><td>superuser 
                        </td><td>Writes planner performance statistics to the server log. 
                        </td></tr><tr valign="top"><td>log_statement_stats 
                        </td><td>off </td><td>Statistics / Monitoring 
                        </td><td>superuser 
                        </td><td>Writes cumulative performance statistics to the server log. 
                        </td></tr><tr valign="top"><td>stats_temp_directory 
                        </td><td>pg_stat_tmp </td><td>Statistics / Query and Index Statistics Collector 
                        </td><td>sighup 
                        </td><td>Writes temporary statistics files to the specified directory. 
                        </td></tr><tr valign="top"><td>track_activities 
                        </td><td>on </td><td>Statistics / Query and Index Statistics Collector 
                        </td><td>superuser 
                        </td><td>Enables the collection of information on the currently executing command of each session, along with the time at which that command began execution. 
                        </td></tr><tr valign="top"><td>track_counts 
                        </td><td>on </td><td>Statistics / Query and Index Statistics Collector 
                        </td><td>superuser 
                        </td><td>Collects statistics on database activity. 
                        </td></tr><tr valign="top"><td>track_functions 
                        </td><td>none </td><td>Statistics / Query and Index Statistics Collector 
                        </td><td>superuser 
                        </td><td>Collects function-level statistics on database activity. 
                        </td></tr><tr valign="top"><td>track_io_timing 
                        </td><td>off </td><td>Statistics / Query and Index Statistics Collector 
                        </td><td>superuser 
                        </td><td>Collects timing statistics for database I/O activity. 
                        </td></tr><tr valign="top"><td>transform_null_equals 
                        </td><td>off </td><td>Version and Platform Compatibility / Other Platforms and Clients 
                        </td><td>user 
                        </td><td>When turned on, expressions of the form expr = NULL (or NULL = expr) are treated as expr IS NULL, that is, they return true if expr evaluates to the null value, and false otherwise. The correct behavior of expr = NULL is to always return null (unknown). 
                        </td></tr><tr valign="top"><td>array_nulls 
                        </td><td>on </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>user 
                        </td><td>When turned on, unquoted NULL in an array input value means a null value; otherwise it is taken literally. 
                        </td></tr><tr valign="top"><td>backslash_quote 
                        </td><td>safe_encoding </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>user 
                        </td><td>Sets whether "\'" is allowed in string literals. 
                        </td></tr><tr valign="top"><td>default_with_oids 
                        </td><td>off </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>user 
                        </td><td>Create new tables with OIDs by default. 
                        </td></tr><tr valign="top"><td>escape_string_warning 
                        </td><td>on </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>user 
                        </td><td>Warn about backslash escapes in ordinary string literals. 
                        </td></tr><tr valign="top"><td>lo_compat_privileges 
                        </td><td>off </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>superuser 
                        </td><td>Skips privilege checks when reading or modifying large objects, for compatibility with PostgreSQL releases prior to 9.0. 
                        </td></tr><tr valign="top"><td>operator_precedence_warning 
                        </td><td>off </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>user 
                        </td><td>Emit a warning for constructs that changed meaning since PostgreSQL 9.4. 
                        </td></tr><tr valign="top"><td>quote_all_identifiers 
                        </td><td>off </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>user 
                        </td><td>When generating SQL fragments, quote all identifiers. 
                        </td></tr><tr valign="top"><td>sql_inheritance 
                        </td><td>on </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>user 
                        </td><td>Causes subtables to be included by default in various commands. 
                        </td></tr><tr valign="top"><td>standard_conforming_strings 
                        </td><td>on </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>user 
                        </td><td>Causes '...' strings to treat backslashes literally. 
                        </td></tr><tr valign="top"><td>synchronize_seqscans 
                        </td><td>on </td><td>Version and Platform Compatibility / Previous PostgreSQL Versions 
                        </td><td>user 
                        </td><td>Enable synchronized sequential scans. 
                        </td></tr><tr valign="top"><td>archive_command 
                        </td><td>(disabled) </td><td>Write-Ahead Log / Archiving 
                        </td><td>sighup 
                        </td><td>Sets the shell command that will be called to archive a WAL file. 
                        </td></tr><tr valign="top"><td>archive_mode 
                        </td><td>off </td><td>Write-Ahead Log / Archiving 
                        </td><td>postmaster 
                        </td><td>Allows archiving of WAL files using archive_command. 
                        </td></tr><tr valign="top"><td>archive_timeout 
                        </td><td>0 s</td><td>Write-Ahead Log / Archiving 
                        </td><td>sighup 
                        </td><td>Forces a switch to the next xlog file if a new file has not been started within N seconds. 
                        </td></tr><tr valign="top"><td>checkpoint_completion_target 
                        </td><td>0.5 </td><td>Write-Ahead Log / Checkpoints 
                        </td><td>sighup 
                        </td><td>Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval. 
                        </td></tr><tr valign="top"><td>checkpoint_flush_after 
                        </td><td>0 8kB</td><td>Write-Ahead Log / Checkpoints 
                        </td><td>sighup 
                        </td><td>Number of pages after which previously performed writes are flushed to disk. 
                        </td></tr><tr valign="top"><td>checkpoint_timeout 
                        </td><td>300 s</td><td>Write-Ahead Log / Checkpoints 
                        </td><td>sighup 
                        </td><td>Sets the maximum time between automatic WAL checkpoints. 
                        </td></tr><tr valign="top"><td>checkpoint_warning 
                        </td><td>30 s</td><td>Write-Ahead Log / Checkpoints 
                        </td><td>sighup 
                        </td><td>Write a message to the server log if checkpoints caused by the filling of checkpoint segment files happens more frequently than this number of seconds. Zero turns off the warning. 
                        </td></tr><tr valign="top"><td>max_wal_size 
                        </td><td>64 16MB</td><td>Write-Ahead Log / Checkpoints 
                        </td><td>sighup 
                        </td><td>Sets the WAL size that triggers a checkpoint. 
                        </td></tr><tr valign="top"><td>min_wal_size 
                        </td><td>5 16MB</td><td>Write-Ahead Log / Checkpoints 
                        </td><td>sighup 
                        </td><td>Sets the minimum size to shrink the WAL to. 
                        </td></tr><tr valign="top"><td>commit_delay 
                        </td><td>0 </td><td>Write-Ahead Log / Settings 
                        </td><td>superuser 
                        </td><td>Sets the delay in microseconds between transaction commit and flushing WAL to disk. 
                        </td></tr><tr valign="top"><td>commit_siblings 
                        </td><td>5 </td><td>Write-Ahead Log / Settings 
                        </td><td>user 
                        </td><td>Sets the minimum concurrent open transactions before performing commit_delay. 
                        </td></tr><tr valign="top"><td>fsync 
                        </td><td>on </td><td>Write-Ahead Log / Settings 
                        </td><td>sighup 
                        </td><td>The server will use the fsync() system call in several places to make sure that updates are physically written to disk. This insures that a database cluster will recover to a consistent state after an operating system or hardware crash. 
                        </td></tr><tr valign="top"><td>full_page_writes 
                        </td><td>on </td><td>Write-Ahead Log / Settings 
                        </td><td>sighup 
                        </td><td>A page write in process during an operating system crash might be only partially written to disk.  During recovery, the row changes stored in WAL are not enough to recover.  This option writes pages when first modified after a checkpoint to WAL so full recovery is possible. 
                        </td></tr><tr valign="top"><td>synchronous_commit 
                        </td><td>on </td><td>Write-Ahead Log / Settings 
                        </td><td>user 
                        </td><td>Sets the current transaction's synchronization level. 
                        </td></tr><tr valign="top"><td>wal_buffers 
                        </td><td>512 8kB</td><td>Write-Ahead Log / Settings 
                        </td><td>postmaster 
                        </td><td>Sets the number of disk-page buffers in shared memory for WAL. 
                        </td></tr><tr valign="top"><td>wal_compression 
                        </td><td>off </td><td>Write-Ahead Log / Settings 
                        </td><td>superuser 
                        </td><td>Compresses full-page writes written in WAL file. 
                        </td></tr><tr valign="top"><td>wal_level 
                        </td><td>minimal </td><td>Write-Ahead Log / Settings 
                        </td><td>postmaster 
                        </td><td>Set the level of information written to the WAL. 
                        </td></tr><tr valign="top"><td>wal_log_hints 
                        </td><td>off </td><td>Write-Ahead Log / Settings 
                        </td><td>postmaster 
                        </td><td>Writes full pages to WAL when first modified after a checkpoint, even for a non-critical modifications. 
                        </td></tr><tr valign="top"><td>wal_sync_method 
                        </td><td>open_datasync </td><td>Write-Ahead Log / Settings 
                        </td><td>sighup 
                        </td><td>Selects the method used for forcing WAL updates to disk. 
                        </td></tr><tr valign="top"><td>wal_writer_delay 
                        </td><td>200 ms</td><td>Write-Ahead Log / Settings 
                        </td><td>sighup 
                        </td><td>Time between WAL flushes performed in the WAL writer. 
                        </td></tr><tr valign="top"><td>wal_writer_flush_after 
                        </td><td>128 8kB</td><td>Write-Ahead Log / Settings 
                        </td><td>sighup 
                        </td><td>Amount of WAL written out by WAL writer that triggers a flush. 
                        </td></tr></tbody></table><h2 class="dtH2" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red">Evaluation</font></h2><p xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red"><b>This is an evaluation version of SqlSpec.  If you like SqlSpec, please consider upgrading to the full version.  Upgrade here:  <a target="_blank" href="http://elsasoft.com">Upgrade</a></b></font></p><h2 class="dtH2">Server features</h2><table class="dtTABLE"><thead><tr valign="top"><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">feature</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">supported</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">comment</th></tr></thead><tbody><tr valign="top"><td>&lt;fetch first clause&gt; in subqueries 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>&lt;fetch first row count&gt; in &lt;fetch first clause&gt; 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>&lt;offset row count&gt; in &lt;result offset clause&gt; 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>&lt;order by clause&gt; in subqueries 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>&lt;result offset clause&gt; in subqueries 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>ABS and MOD functions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Active database 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Additional translation documentation 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced Information Schema for registered XML Schemas 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced multiset support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced OLAP operations 
                                        </td><td>NO 
                                            </td><td>some forms supported 
   
                                            </td></tr><tr valign="top"><td>Advanced support for BINARY and VARBINARY data types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping: base64 encoding of binary strings 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping: data mapping 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping: hex encoding of binary strings 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping: metadata mapping 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping: null as nil 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping: nulls absent 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping: table as element 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping: table as forest 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Advanced table mapping: with target namespace 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>All diagnostics 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Alter column data type 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Alter column data type: XML type 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>ALTER domain 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>ALTER TABLE statement: DROP COLUMN clause 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Alter transform statement 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Application-time period tables 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Array constructors by query 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Array element assignment 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Array locators 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>ARRAY_AGG 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>ARRAY_MAX_CARDINALITY 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Array-returning external SQL-invoked functions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Arrays of reference types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Arrays of user-defined types 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Arrays of XML type 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>AS subquery clause in table definition 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Assertions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Attributes of XML type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic array support 
                                        </td><td>NO 
                                            </td><td>partially supported 
   
                                            </td></tr><tr valign="top"><td>Basic array support 
                                         - Arrays of built-in data types</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic array support 
                                         - Arrays of distinct types</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic array support 
                                         - Array expressions</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                         - DECLARE CURSOR</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                         - ORDER BY columns need not be in select list</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                         - Value expressions in ORDER BY clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                         - OPEN statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                         - Positioned UPDATE statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                         - Positioned DELETE statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                         - CLOSE statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                         - FETCH statement implicit NEXT</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic cursor support 
                                         - WITH HOLD cursors</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic data manipulation 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic data manipulation 
                                         - INSERT statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic data manipulation 
                                         - Searched UPDATE statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic data manipulation 
                                         - Searched DELETE statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic date and time 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic date and time 
                                         - DATE data type (including support of DATE literal)</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic date and time 
                                         - TIME data type (including support of TIME literal) with fractional seconds precision of at least 0</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic date and time 
                                         - TIMESTAMP data type (including support of TIMESTAMP literal) with fractional seconds precision of at least 0 and 6</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic date and time 
                                         - Comparison predicate on DATE, TIME, and TIMESTAMP data types</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic date and time 
                                         - Explicit CAST between datetime types and character string types</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic date and time 
                                         - CURRENT_DATE</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic date and time 
                                         - LOCALTIME</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic date and time 
                                         - LOCALTIMESTAMP</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic diagnostics management 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic diagnostics management 
                                         - GET DIAGNOSTICS statement</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic diagnostics management 
                                         - SET TRANSACTION statement: DIAGNOSTICS SIZE clause</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic dynamic SQL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic flagging 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic information schema 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic information schema 
                                         - COLUMNS view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic information schema 
                                         - TABLES view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic information schema 
                                         - VIEWS view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic information schema 
                                         - TABLE_CONSTRAINTS view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic information schema 
                                         - REFERENTIAL_CONSTRAINTS view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic information schema 
                                         - CHECK_CONSTRAINTS view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Information Schema for registered XML Schemas 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic integrity constraints 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic integrity constraints 
                                         - NOT NULL constraints</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic integrity constraints 
                                         - UNIQUE constraints of NOT NULL columns</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic integrity constraints 
                                         - PRIMARY KEY constraints</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic integrity constraints 
                                         - Basic FOREIGN KEY constraint with the NO ACTION default for both referential delete action and referential update action</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic integrity constraints 
                                         - CHECK constraints</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic integrity constraints 
                                         - Column defaults</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic integrity constraints 
                                         - NOT NULL inferred on PRIMARY KEY</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic integrity constraints 
                                         - Names in a foreign key can be specified in any order</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic joined table 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic joined table 
                                         - Inner join (but not necessarily the INNER keyword)</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic joined table 
                                         - INNER keyword</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic joined table 
                                         - LEFT OUTER JOIN</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic joined table 
                                         - RIGHT OUTER JOIN</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic joined table 
                                         - Outer joins can be nested</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic joined table 
                                         - The inner table in a left or right outer join can also be used in an inner join</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic joined table 
                                         - All comparison operators are supported (rather than just =)</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic LOB data type support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic LOB data type support 
                                         - BLOB data type</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic LOB data type support 
                                         - CLOB data type</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic LOB data type support 
                                         - POSITION, LENGTH, LOWER, TRIM, UPPER, and SUBSTRING functions for LOB data types</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic LOB data type support 
                                         - Concatenation of LOB data types</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic LOB data type support 
                                         - LOB locator: non-holdable</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic multiset support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic object support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - Comparison predicate</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - BETWEEN predicate</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - IN predicate with list of values</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - LIKE predicate</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - LIKE predicate ESCAPE clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - NULL predicate</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - Quantified comparison predicate</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - EXISTS predicate</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - Subqueries in comparison predicate</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - Subqueries in IN predicate</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - Subqueries in quantified comparison predicate</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - Correlated subqueries</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic predicates and search conditions 
                                         - Search condition</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - SELECT privilege</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - DELETE privilege</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - INSERT privilege at the table level</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - UPDATE privilege at the table level</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - UPDATE privilege at the column level</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - REFERENCES privilege at the table level</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - REFERENCES privilege at the column level</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - WITH GRANT OPTION</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - USAGE privilege</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic Privileges 
                                         - EXECUTE privilege</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query expressions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query expressions 
                                         - UNION DISTINCT table operator</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query expressions 
                                         - UNION ALL table operator</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query expressions 
                                         - EXCEPT DISTINCT table operator</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query expressions 
                                         - Columns combined via table operators need not have exactly the same data type</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query expressions 
                                         - Table operators in subqueries</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query specification 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query specification 
                                         - SELECT DISTINCT</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query specification 
                                         - GROUP BY clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query specification 
                                         - GROUP BY can contain columns not in &lt;select list&gt;</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query specification 
                                         - Select list items can be renamed</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query specification 
                                         - HAVING clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query specification 
                                         - Qualified * in select list</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query specification 
                                         - Correlation names in the FROM clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic query specification 
                                         - Rename columns in the FROM clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic reference types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic roles 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic schema manipulation 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic schema manipulation 
                                         - CREATE TABLE statement to create persistent base tables</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic schema manipulation 
                                         - CREATE VIEW statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic schema manipulation 
                                         - GRANT statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic schema manipulation 
                                         - ALTER TABLE statement: ADD COLUMN clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic schema manipulation 
                                         - DROP TABLE statement: RESTRICT clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic schema manipulation 
                                         - DROP VIEW statement: RESTRICT clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic schema manipulation 
                                         - REVOKE statement: RESTRICT clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SET TRANSACTION statement 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SET TRANSACTION statement 
                                         - SET TRANSACTION statement: ISOLATION LEVEL SERIALIZABLE clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SET TRANSACTION statement 
                                         - SET TRANSACTION statement: READ ONLY and READ WRITE clauses</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SQL-invoked routines 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SQL-invoked routines 
                                         - User-defined functions with no overloading</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SQL-invoked routines 
                                         - User-defined stored procedures with no overloading</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SQL-invoked routines 
                                         - Function invocation</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SQL-invoked routines 
                                         - CALL statement</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SQL-invoked routines 
                                         - RETURN statement</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SQL-invoked routines 
                                         - ROUTINES view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic SQL-invoked routines 
                                         - PARAMETERS view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic structured types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping: base64 encoding of binary strings 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping: data mapping 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping: hex encoding of binary strings 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping: metadata mapping 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping: null as nil 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping: nulls absent 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping: table as element 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping: table as forest 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic table mapping: with target namespace 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic trigger capability 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic trigger capability 
                                         - Triggers activated on UPDATE, INSERT, or DELETE of one base table</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic trigger capability 
                                         - BEFORE triggers</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic trigger capability 
                                         - AFTER triggers</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic trigger capability 
                                         - FOR EACH ROW triggers</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic trigger capability 
                                         - Ability to specify a search condition that must be true before the trigger is invoked</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic trigger capability 
                                         - Support for run-time rules for the interaction of triggers and constraints</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic trigger capability 
                                         - TRIGGER privilege</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Basic trigger capability 
                                         - Multiple triggers for the same event are executed in the order in which they were created in the catalog</td><td>NO 
                                            </td><td>intentionally omitted 
   
                                            </td></tr><tr valign="top"><td>BIGINT data type 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>BINARY and VARBINARY data types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>BOOLEAN data type 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Bracketed SQL comments (/*...*/ comments) 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CASCADE drop behavior 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CASE expression 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CASE expression 
                                         - Simple CASE</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CASE expression 
                                         - Searched CASE</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CASE expression 
                                         - NULLIF</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CASE expression 
                                         - COALESCE</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CAST function 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Catalog name qualifiers 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Chained transactions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character data types 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character set definition 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - CHARACTER data type</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - CHARACTER VARYING data type</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - Character literals</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - CHARACTER_LENGTH function</td><td>YES 
                                            </td><td>trims trailing spaces from CHARACTER values before counting 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - OCTET_LENGTH function</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - SUBSTRING function</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - Character concatenation</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - UPPER and LOWER functions</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - TRIM function</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - Implicit casting among the character string types</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - POSITION function</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Character string types 
                                         - Character comparison</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CLI 
                                        </td><td>NO 
                                            </td><td>ODBC is similar. 
   
                                            </td></tr><tr valign="top"><td>Collation support 
                                        </td><td>YES 
                                            </td><td>but no character set support 
   
                                            </td></tr><tr valign="top"><td>Combined data change and retrieval 
                                        </td><td>NO 
                                            </td><td>different syntax 
   
                                            </td></tr><tr valign="top"><td>Comma-separated predicates in simple CASE expression 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Comparable data types for referential constraints 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Compound binary literal 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Compound character literals 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Connection management 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Constraint management 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Core 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CORRESPONDING in query expressions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Create method by specific method name 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Create table of type 
                                        </td><td>NO 
                                            </td><td>partially supported 
   
                                            </td></tr><tr valign="top"><td>CURRENT_CATALOG 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>CURRENT_SCHEMA 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Cyclically dependent routines 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks via Ada 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks via C 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks via COBOL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks via Embedded SQL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks via Fortran 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks via M 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks via Pascal 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks via PL/I 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Datalinks via SQL/CLI 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Declared data type attributes 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Default values for IN parameters of SQL-invoked procedures 
                                        </td><td>NO 
                                            </td><td>supported except DEFAULT key word in invocation 
   
                                            </td></tr><tr valign="top"><td>Deferrable constraints 
                                        </td><td>NO 
                                            </td><td>foreign and unique keys only 
   
                                            </td></tr><tr valign="top"><td>Derived tables 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>DESCRIBE CURSOR 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Direct SQL 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Distinct data types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Distinct data types 
                                         - USER_DEFINED_TYPES view</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>DISTINCT predicate 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>DISTINCT predicate with negation 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Distinct types based on array types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Distinct types based on distinct types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Distinct types of XML type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Domain support 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Drop column generation expression clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Drop identity property clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Dynamic specification of cursor attributes 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Elementary OLAP operations 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Embedded Ada 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Embedded C 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Embedded COBOL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Embedded Fortran 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Embedded MUMPS 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Embedded Pascal 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Embedded PL/I 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced datetime facilities 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced derived column names 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced diagnostics management 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced documentation tables 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced documentation tables 
                                         - SQL_SIZING_PROFILES view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced documentation tables 
                                         - SQL_IMPLEMENTATION_INFO view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced documentation tables 
                                         - SQL_PACKAGES view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced execution rights 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced EXISTS predicate 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced integrity management 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced MERGE statement 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced nullability determination 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced numeric functions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced object support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced reference types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced savepoint management 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced seconds precision 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced structured types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced trigger capability 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Enhanced UNNEST 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>EXCEPT ALL table operator 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Expanded NULL predicate 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Explicit aliases for all-fields reference 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Explicit defaults 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Explicit security for external routines 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Explicit security for SQL routines 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended CASE expression 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended collation support 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended dynamic SQL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended dynamic SQL 
                                         - &lt;describe input statement&gt;</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended flagging 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended grouping capabilities 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended joined table 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended joined table 
                                         - NATURAL JOIN</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended joined table 
                                         - FULL OUTER JOIN</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended joined table 
                                         - CROSS JOIN</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended LIKE clause in table definition 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended LOB data type support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended REVOKE statement 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended REVOKE statement 
                                         - REVOKE statement performed by other than the owner of a schema object</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended REVOKE statement 
                                         - REVOKE statement: GRANT OPTION FOR clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended REVOKE statement 
                                         - REVOKE statement to revoke a privilege that the grantee has WITH GRANT OPTION</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended roles 
                                        </td><td>NO 
                                            </td><td>mostly supported 
   
                                            </td></tr><tr valign="top"><td>Extended schema manipulation 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended schema manipulation 
                                         - ALTER TABLE statement: ALTER COLUMN clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended schema manipulation 
                                         - ALTER TABLE statement: ADD CONSTRAINT clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended schema manipulation 
                                         - ALTER TABLE statement: DROP CONSTRAINT clause</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extended set function support 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Extensions to embedded SQL exception declarations 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Features and conformance views 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Features and conformance views 
                                         - SQL_FEATURES view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Features and conformance views 
                                         - SQL_SIZING view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Features and conformance views 
                                         - SQL_LANGUAGES view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>FETCH FIRST clause: PERCENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>FETCH FIRST clause: WITH TIES option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Fields of XML type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Final structured types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>FIRST_VALUE and LAST_VALUE function 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Foreign data support 
                                        </td><td>NO 
                                            </td><td>partially supported 
   
                                            </td></tr><tr valign="top"><td>Foreign data wrapper general routines 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Foreign data wrapper interface routines in Ada 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Foreign data wrapper interface routines in C 
                                        </td><td>NO 
                                            </td><td>different API 
   
                                            </td></tr><tr valign="top"><td>Foreign data wrapper interface routines in COBOL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Foreign data wrapper interface routines in Fortran 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Foreign data wrapper interface routines in MUMPS 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Foreign data wrapper interface routines in Pascal 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Foreign data wrapper interface routines in PL/I 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Foreign data wrapper support 
                                        </td><td>NO 
                                            </td><td>different API 
   
                                            </td></tr><tr valign="top"><td>Foreign schema support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Full cursor update 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Full cursor update 
                                         - Updatable scrollable cursors</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Full cursor update 
                                         - Updatable ordered cursors</td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Full set function 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Full value expressions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Functional dependencies 
                                        </td><td>NO 
                                            </td><td>partially supported 
   
                                            </td></tr><tr valign="top"><td>Generated columns 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>GetOpts and GetStatistics routines 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>GetSQLString routine 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>GROUP BY DISTINCT 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Grouped operations 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Grouped operations 
                                         - WHERE, GROUP BY, and HAVING clauses supported in queries with grouped views</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Grouped operations 
                                         - Multiple tables supported in queries with grouped views</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Grouped operations 
                                         - Set functions supported in queries with grouped views</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Grouped operations 
                                         - Subqueries with GROUP BY and HAVING clauses and grouped views</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Grouped operations 
                                         - Single row SELECT with GROUP BY and HAVING clauses and grouped views</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Holdable locators 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Host language support for XML: BLOB mapping 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Host language support for XML: CLOB mapping 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Host language support for XML: CONTENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Host language support for XML: DOCUMENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Host language support for XML: PRESERVE WHITESPACE option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Host language support for XML: STRIP WHITESPACE option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Host language support for XML: VARCHAR mapping 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Identifiers 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Identifiers 
                                         - Delimited identifiers</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Identifiers 
                                         - Lower case identifiers</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Identifiers 
                                         - Trailing underscore</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Identity columns 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Identity columns:  simple restart option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IN predicate with one list element 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Indicator data types 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Insensitive cursors 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>INSERT column privileges 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>INSERT statement: DEFAULT VALUES clause 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>INSTEAD OF triggers 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>INTERSECT table operator 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>INTERSECT table operator 
                                         - INTERSECT DISTINCT table operator</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>INTERSECT table operator 
                                         - INTERSECT ALL table operator</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Intervals and datetime arithmetic 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate outside check constraints 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate with CONTENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate with DOCUMENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate with SEQUENCE option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate: ACCORDING TO clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate: data-driven case 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate: ELEMENT clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate: NAMESPACE without ELEMENT clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate: NO NAMESPACE with ELEMENT clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>IS VALID predicate: schema location 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Isolation levels other than SERIALIZABLE 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Isolation levels other than SERIALIZABLE 
                                         - READ UNCOMMITTED isolation level</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Isolation levels other than SERIALIZABLE 
                                         - READ COMMITTED isolation level</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Isolation levels other than SERIALIZABLE 
                                         - REPEATABLE READ isolation level</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>LATERAL derived table 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>LEAD and LAG functions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>LIKE clause in table definition 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>LIKE enhancements 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>LIKE_REGEX predicate 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Local cursor references 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Local table references 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Long identifiers 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>MAX and MIN for row types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>MERGE statement 
                                        </td><td>NO 
                                            </td><td>consider INSERT ... ON CONFLICT DO UPDATE 
   
                                            </td></tr><tr valign="top"><td>MERGE statement with DELETE branch 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Mixed column references in set functions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Module language 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Module language Ada 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Module language Ada: VARCHAR and NUMERIC support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Module language C 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Module language COBOL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Module language Fortran 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Module language MUMPS 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Module language Pascal 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Module language PL/I 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multiargument GROUPING function 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multiple column assignment 
                                        </td><td>NO 
                                            </td><td>only some syntax variants supported 
   
                                            </td></tr><tr valign="top"><td>Multiple module support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multiple schemas per user 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multiplier P 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multiplier T 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multiset locators 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multiset-returning external SQL-invoked functions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multisets of reference types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multisets of user-defined types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Multisets of XML type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Name and identifier mapping 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Named arguments in CALL statement 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Named character sets 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Named column joins for LOBs, arrays, and multisets 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Namespaces in XML publishing 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>National character 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Nested &lt;fetch first clause&gt; in &lt;query expression&gt; 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Nested &lt;order by clause&gt; in &lt;query expression&gt; 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Nested &lt;result offset clause&gt; in &lt;query expression&gt; 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Nested and concatenated GROUPING SETS 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Nested collection types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Nested window functions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>NIL ON NO CONTENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Nonconstant regular expressions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Non-extended descriptor names 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>NTH_VALUE function 
                                        </td><td>NO 
                                            </td><td>function exists, but some options missing 
   
                                            </td></tr><tr valign="top"><td>NTILE function 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Null treatment option for LEAD and LAG functions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Null value support (nulls in lieu of values) 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Numeric data types 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Numeric data types 
                                         - INTEGER and SMALLINT data types</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Numeric data types 
                                         - REAL, DOUBLE PRECISION, and FLOAT data types</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Numeric data types 
                                         - DECIMAL and NUMERIC data types</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Numeric data types 
                                         - Arithmetic operators</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Numeric data types 
                                         - Numeric comparison</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Numeric data types 
                                         - Implicit casting among the numeric data types</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>OCCURRENCES_REGEX function 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Octet support in regular expression operators 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>OLAP 
                                        </td><td>NO 
                                            </td><td>NO 
   
                                            </td></tr><tr valign="top"><td>OLAP facilities 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>ONLY in query expressions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Optional array bounds 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Optional key words for default syntax 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Optional normal form specification 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Optional table constraint enforcement 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>OVERLAPS predicate 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>OVERLAY function 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Overloading of SQL-invoked functions and procedures 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Partitioned joined tables 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Period predicates 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Permutable UDT options list 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Persistent XML values 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Persistent XML values of XML(CONTENT(ANY)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Persistent XML values of XML(CONTENT(UNTYPED)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Persistent XML values of XML(CONTENT(XMLSCHEMA)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Persistent XML values of XML(DOCUMENT(ANY)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Persistent XML values of XML(DOCUMENT(UNTYPED)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Persistent XML values of XML(DOCUMENT(XMLSCHEMA)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Persistent XML values of XML(SEQUENCE) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>POSITION_REGEX function 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Predefined namespace prefixes 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Privilege tables 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Privilege tables 
                                         - TABLE_PRIVILEGES view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Privilege tables 
                                         - COLUMN_PRIVILEGES view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Privilege tables 
                                         - USAGE_PRIVILEGES view</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>PSM 
                                        </td><td>NO 
                                            </td><td>PL/pgSQL is similar. 
   
                                            </td></tr><tr valign="top"><td>Qualified SQL parameter references 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Query-level XML namespace declarations 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Query-level XMLBINARY clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Read-only scrollable cursors 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Read-only scrollable cursors 
                                         - FETCH with explicit NEXT</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Read-only scrollable cursors 
                                         - FETCH FIRST</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Read-only scrollable cursors 
                                         - FETCH LAST</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Read-only scrollable cursors 
                                         - FETCH PRIOR</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Read-only scrollable cursors 
                                         - FETCH ABSOLUTE</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Read-only scrollable cursors 
                                         - FETCH RELATIVE</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Recursive query 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Recursive query in subquery 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Referential action RESTRICT 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Referential delete actions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Referential MATCH types 
                                        </td><td>NO 
                                            </td><td>no partial match yet 
   
                                            </td></tr><tr valign="top"><td>Referential update actions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Regular expression substring function 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Result sets return value 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Retrospective check constraints 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>RETURNING CONTENT in XML publishing 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>RETURNING SEQUENCE in XML publishing 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Routine language Ada 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Routine language Ada: VARCHAR and NUMERIC support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Routine language C 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Routine language COBOL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Routine language Fortran 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Routine language MUMPS 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Routine language Pascal 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Routine language PL/I 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Routine language SQL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Row and table constructors 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Row types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Sampling 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Savepoints 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Scalar subquery values 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Schema definition statement 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Schema definition statement 
                                         - CREATE SCHEMA</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Schema definition statement 
                                         - CREATE TABLE for persistent base tables</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Schema definition statement 
                                         - CREATE VIEW</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Schema definition statement 
                                         - CREATE VIEW: WITH CHECK OPTION</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Schema definition statement 
                                         - GRANT statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SELECT privilege with column granularity 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Self-referencing operations 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Self-referencing structured types 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Sensitive cursors 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Sequence generator support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Sequence generator support: simple restart option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Session management 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set column not null clause 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set functions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set functions 
                                         - AVG</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set functions 
                                         - COUNT</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set functions 
                                         - MAX</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set functions 
                                         - MIN</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set functions 
                                         - SUM</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set functions 
                                         - ALL quantifier</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set functions 
                                         - DISTINCT quantifier</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Set identity column generation clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SET TRANSACTION statement: LOCAL option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SIMILAR predicate 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Simple tables 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Single row SELECT statement 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Spaces in binary literals 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Specific type method 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL comments using leading double minus 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL paths in function and type name resolution 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-dynamic statements in external routines 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-dynamic statements in SQL routines 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-invoked routines on arrays 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-invoked routines on arrays 
                                         - Array parameters</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-invoked routines on arrays 
                                         - Array as result type of functions</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-invoked routines on multisets 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-schema statements in external routines 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-schema statements in SQL routines 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-server foreign data support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQL-session and client module collations 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>SQLSTATE support 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>START TRANSACTION statement 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Structured type locators 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Subprogram support 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Subqueries in CHECK 
                                        </td><td>NO 
                                            </td><td>intentionally omitted 
   
                                            </td></tr><tr valign="top"><td>SUBSTRING_REGEX function 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Subtables 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Subtype treatment 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Subtype treatment for references 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Symmetric BETWEEN predicate 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>System-versioned tables 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Table functions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Temporary tables 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Time zone specification 
                                        </td><td>YES 
                                            </td><td>differences regarding literal interpretation 
   
                                            </td></tr><tr valign="top"><td>TIMESTAMP in DATE type precedence list 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Timestamp in Information Schema 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Top-level &lt;fetch first clause&gt; in &lt;query expression&gt; 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Top-level &lt;fetch first clause&gt; in views 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Top-level &lt;order by clause&gt; in &lt;query expression&gt; 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Top-level &lt;order by clause&gt; in views 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Top-level &lt;result offset clause&gt; in &lt;query expression&gt; 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Top-level &lt;result offset clause&gt; in views 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Transaction counts 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Transaction support 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Transaction support 
                                         - COMMIT statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Transaction support 
                                         - ROLLBACK statement</td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Transform functions 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>TRANSLATE_REGEX function 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Translation support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>TransmitRequest 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>TRIM_ARRAY 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>TRUNCATE TABLE statement 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>TRUNCATE TABLE: identity column restart option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Truth value tests 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Type predicate 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>UCS support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Unicode escapes in identifiers 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Unicode escapes in literals 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>UNION and EXCEPT in views 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Unique constraint on entire row 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>UNIQUE constraints of possibly null columns 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>UNIQUE predicate 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Untyped SQL-invoked function arguments 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Updatable joins, unions, and columns 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Updatable queries with subqueries 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>Usage tables 
                                        </td><td>NO 
                                            </td><td>no ROUTINE_*_USAGE tables 
   
                                            </td></tr><tr valign="top"><td>User authorization 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>User-defined cast functions 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>User-defined orderings 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>View CHECK enhancements 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>WINDOW clause: GROUPS option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>WITH (excluding RECURSIVE) in query expression 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>WITH (excluding RECURSIVE) in subquery 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML 1.1 support 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML content predicate 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML document predicate 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML namespace declarations in compound statements 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML namespace declarations in DDL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML namespace declarations in DML 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML namespace declarations in XMLTable 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML null handling options 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML parameters in external routines 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML parameters in SQL routines 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML passing mechanism BY REF 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML passing mechanism BY VALUE 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML type 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML type: ELEMENT clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML type: NAMESPACE without ELEMENT clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML type: NO NAMESPACE with ELEMENT clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML type: schema location 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML(CONTENT(ANY)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML(CONTENT(UNTYPED)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML(CONTENT(XMLSCHEMA)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML(DOCUMENT(ANY)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML(DOCUMENT(UNTYPED)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML(DOCUMENT(XMLSCHEMA)) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XML(SEQUENCE) type 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLAgg 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLAgg: ORDER BY option 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLBINARY clause in compound statements 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLBINARY clause in DDL 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLBINARY clause in DML 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLBINARY clause in subqueries 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLCast 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLComment 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLConcat 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLDocument 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLElement 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLExists 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLForest 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLParse: BLOB input and CONTENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLParse: BLOB input and DOCUMENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLParse: character string input and CONTENT option 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLParse: character string input and DOCUMENT option 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLPI 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLQuery 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLQuery: EMPTY ON EMPTY option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLQuery: initializing an XQuery variable 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLQuery: NULL ON EMPTY option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLQuery: passing a context item 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLQuery: RETURNING CONTENT 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLQuery: RETURNING SEQUENCE 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: BLOB serialization 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: BLOB serialization and CONTENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: BLOB serialization and DOCUMENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: BOM 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: character string serialization 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: character string serialization and CONTENT option 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: character string serialization and DOCUMENT option 
                                        </td><td>YES 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: explicit ENCODING option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: explicit XML declaration 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: INDENT 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLSerialize: VERSION 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLTable 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLTable: column default option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLTable: derived column list option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLTable: initializing an XQuery variable 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLTable: ordinality column option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLTable: passing a context item 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLText 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLValidate with CONTENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLValidate with DOCUMENT option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLValidate with SEQUENCE option 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLValidate: ACCORDING TO clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLValidate: data-driven case 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLValidate: ELEMENT clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLValidate: NAMESPACE without ELEMENT clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLValidate: NO NAMESPACE with ELEMENT clause 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr><tr valign="top"><td>XMLValidate: schema location 
                                        </td><td>NO 
                                            </td><td> 
   
                                            </td></tr></tbody></table></div><p style="page-break-after:always" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><br /><br /><div id="copy_url_div"><center><a href="javascript:void(0)" onclick="copyToClipboard(document.URL)">copy URL to clipboard (IE only)</a></center><br /></div><center>Documentation generated by <a target="_blank" href="http://elsasoft.com">SqlSpec</a></center></p></body></html>