<?xml version="1.0" encoding="utf-8"?><html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><head xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><meta name="vs_targetSchema" content="http://schemas.microsoft.com/intellisense/ie5" /><link rel="stylesheet" href="sqlspec.css" /><title>MarketplaceCore - public.setpayment</title><script language="JavaScript" src="resort_table.js"></script><script language="javascript">
//
// this hides the SVG if you are on IE, 
// and hides the VML if you are NOT on IE.
//
function init()
{
  var isIE = navigator.userAgent.indexOf("MSIE") != -1;
  showhideIfIE('FK_SVG', isIE, true);
  showhideIfIE('DEPENDENCY_SVG', isIE, true);
  showhideIfIE('MODEL_SVG', isIE, true); 
  showhideIfIE('FK_VML', isIE, false);
  showhideIfIE('DEPENDENCY_VML', isIE, false);
  showhideIfIE('MODEL_VML', isIE, false);
  
  var node = document.getElementById('copy_url_div');
  if (node != null)
  {
    var inChm = document.URL.indexOf('mk:@MSITStore') != -1;
    node.style.display = inChm || !isIE ? 'none' : 'block';
  }
}   

function showhideIfIE(elementName, isIE, hide)
{
  node = document.getElementById(elementName);
  if (node != null) 
  {
    if (hide) 
      node.style.display = isIE ? 'none' : 'block';
    else
      node.style.display = isIE ? 'block' : 'none';
  }
}

function copyToClipboard(s)
{
  if(window.clipboardData)
    if (clipboardData.setData)
      clipboardData.setData('text', s);
}
</script></head><body onload="init()"><div id="nsbanner" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><div id="bannerrow1"><table class="bannerparthead" cellspacing="0" id="Table1"><tr id="hdr"><td class="runninghead">Database reference - MarketplaceCore</td><td class="product" /></tr></table></div><div id="TitleRow"><h1 class="dtH1"><a href="default.htm">MarketplaceCore</a> -         
                    <a href="allUDFs.htm">functions</a> -         
                    public.setpayment</h1></div></div><div id="nstext"><h2 class="dtH2" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red">Evaluation</font></h2><p xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red"><b>This is an evaluation version of SqlSpec.  If you like SqlSpec, please consider upgrading to the full version.  Upgrade here:  <a target="_blank" href="http://elsasoft.com">Upgrade</a></b></font></p><h2 class="dtH2">Description</h2><span class="desc">none</span><h2 class="dtH2" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red">Evaluation</font></h2><p xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red"><b>This is an evaluation version of SqlSpec.  If you like SqlSpec, please consider upgrading to the full version.  Upgrade here:  <a target="_blank" href="http://elsasoft.com">Upgrade</a></b></font></p><h2 class="dtH2">Function properties</h2><table class="dtTABLE"><thead><tr valign="top"><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">name</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">value</th></tr></thead><tbody><tr valign="top"><td>name</td><td>public.setpayment</td></tr><tr valign="top"><td>return type</td><td>pg_catalog.record 
                  </td></tr><tr valign="top"><td>language</td><td>PLPGSQL</td></tr><tr valign="top"><td>deterministic</td><td>NO</td></tr></tbody></table><h2 class="dtH2" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red">Evaluation</font></h2><p xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red"><b>This is an evaluation version of SqlSpec.  If you like SqlSpec, please consider upgrading to the full version.  Upgrade here:  <a target="_blank" href="http://elsasoft.com">Upgrade</a></b></font></p><h2 class="dtH2">Parameters</h2><table class="dtTABLE"><thead><tr valign="top"><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">name</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">datatype</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">udt</th><th style="cursor:pointer;cursor:hand;" onclick="resortColumn(this)">in/out</th></tr></thead><tbody><tr valign="top"><td>vtransactionuuid 
                                            </td><td>uuid 
                                            </td><td>pg_catalog.uuid 
                                            </td><td>IN 
                                            </td></tr><tr valign="top"><td>vbitcointransaction 
                                            </td><td>character varying 
                                            </td><td>pg_catalog.varchar 
                                            </td><td>IN 
                                            </td></tr><tr valign="top"><td>vconfidencestate 
                                            </td><td>character varying 
                                            </td><td>pg_catalog.varchar 
                                            </td><td>IN 
                                            </td></tr><tr valign="top"><td>vdepth 
                                            </td><td>integer 
                                            </td><td>pg_catalog.int4 
                                            </td><td>IN 
                                            </td></tr><tr valign="top"><td>vextinvoiceid 
                                            </td><td>uuid 
                                            </td><td>pg_catalog.uuid 
                                            </td><td>IN 
                                            </td></tr><tr valign="top"><td>vuseruuid 
                                            </td><td>uuid 
                                            </td><td>pg_catalog.uuid 
                                            </td><td>IN 
                                            </td></tr><tr valign="top"><td>vroles 
                                            </td><td>ARRAY 
                                            </td><td>pg_catalog._text 
                                            </td><td>IN 
                                            </td></tr><tr valign="top"><td>paymentuuid 
                                            </td><td>uuid 
                                            </td><td>pg_catalog.uuid 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>paymentinvoiceuuid 
                                            </td><td>uuid 
                                            </td><td>pg_catalog.uuid 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>paydate 
                                            </td><td>timestamp with time zone 
                                            </td><td>pg_catalog.timestamptz 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>bitcointransation 
                                            </td><td>character varying 
                                            </td><td>pg_catalog.varchar 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>confidencestate 
                                            </td><td>character varying 
                                            </td><td>pg_catalog.varchar 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>depth 
                                            </td><td>integer 
                                            </td><td>pg_catalog.int4 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>extinvoiceid 
                                            </td><td>uuid 
                                            </td><td>pg_catalog.uuid 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>createdby 
                                            </td><td>uuid 
                                            </td><td>pg_catalog.uuid 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>createdat 
                                            </td><td>timestamp with time zone 
                                            </td><td>pg_catalog.timestamptz 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>updatedby 
                                            </td><td>uuid 
                                            </td><td>pg_catalog.uuid 
                                            </td><td>OUT 
                                            </td></tr><tr valign="top"><td>updatedat 
                                            </td><td>timestamp with time zone 
                                            </td><td>pg_catalog.timestamptz 
                                            </td><td>OUT 
                                            </td></tr></tbody></table><h2 class="dtH2" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red">Evaluation</font></h2><p xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red"><b>This is an evaluation version of SqlSpec.  If you like SqlSpec, please consider upgrading to the full version.  Upgrade here:  <a target="_blank" href="http://elsasoft.com">Upgrade</a></b></font></p><h2 class="dtH2">Usage</h2><pre class="csharpcode"><span class="kwrd">result</span> = <span class="kwrd">public</span>.setpayment(
    my_vtransactionuuid,
    my_vbitcointransaction,
    my_vconfidencestate,
    my_vdepth,
    my_vextinvoiceid,
    my_vuseruuid,
    my_vroles,
    my_paymentuuid,
    my_paymentinvoiceuuid,
    my_paydate,
    my_bitcointransation,
    my_confidencestate,
    my_depth,
    my_extinvoiceid,
    my_createdby,
    my_createdat,
    my_updatedby,
    my_updatedat
);</pre><h2 class="dtH2" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red">Evaluation</font></h2><p xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><font color="red"><b>This is an evaluation version of SqlSpec.  If you like SqlSpec, please consider upgrading to the full version.  Upgrade here:  <a target="_blank" href="http://elsasoft.com">Upgrade</a></b></font></p><h2 class="dtH2">Code</h2><pre class="csharpcode"><span class="kwrd">CREATE</span> <span class="kwrd">FUNCTION</span> setpayment(vtransactionuuid uuid, vbitcointransaction <span class="kwrd">character</span> <span class="kwrd">varying</span>, vconfidencestate <span class="kwrd">character</span> <span class="kwrd">varying</span>, vdepth <span class="kwrd">integer</span>, vextinvoiceid uuid, vuseruuid uuid, vroles text[]) <span class="kwrd">RETURNS</span> <span class="kwrd">TABLE</span>(paymentuuid uuid, paymentinvoiceuuid uuid, paydate <span class="kwrd">timestamp</span> <span class="kwrd">with</span> <span class="kwrd">time</span> <span class="kwrd">zone</span>, bitcointransation <span class="kwrd">character</span> <span class="kwrd">varying</span>, confidencestate <span class="kwrd">character</span> <span class="kwrd">varying</span>, <span class="kwrd">depth</span> <span class="kwrd">integer</span>, extinvoiceid uuid, createdby uuid, createdat <span class="kwrd">timestamp</span> <span class="kwrd">with</span> <span class="kwrd">time</span> <span class="kwrd">zone</span>, updatedby uuid, updatedat <span class="kwrd">timestamp</span> <span class="kwrd">with</span> <span class="kwrd">time</span> <span class="kwrd">zone</span>)
    <span class="kwrd">LANGUAGE</span> plpgsql
    <span class="kwrd">AS</span> $$
    #variable_conflict use_column
      <span class="kwrd">DECLARE</span>     vPaymentID <span class="kwrd">integer</span>;
        vPaymentUUID uuid := (<span class="kwrd">select</span> uuid_generate_v4());
        vPaymentInvoiceID <span class="kwrd">integer</span> := (<span class="kwrd">select</span> PaymentInvoiceID <span class="kwrd">from</span> transactions <span class="kwrd">where</span> transactionuuid = vTransactionUUID);
        vPayDate <span class="kwrd">timestamp</span> <span class="kwrd">without</span> <span class="kwrd">time</span> <span class="kwrd">zone</span> := <span class="kwrd">null</span>;
        vTransactionID <span class="kwrd">integer</span> := (<span class="kwrd">select</span> transactionid <span class="kwrd">from</span> transactions <span class="kwrd">where</span> transactionuuid = vtransactionuuid);
        vFunctionName <span class="kwrd">varchar</span> := <span class="str">'SetPayment'</span>;
        vIsAllowed <span class="kwrd">boolean</span> := (<span class="kwrd">select</span> <span class="kwrd">public</span>.checkPermissions(vRoles, vFunctionName));

    <span class="kwrd">BEGIN</span>

    <span class="kwrd">IF</span>(vIsAllowed) <span class="kwrd">THEN</span>


        <span class="kwrd">IF</span> <span class="kwrd">exists</span> (<span class="kwrd">select</span> extinvoiceid <span class="kwrd">from</span> payment <span class="kwrd">where</span> extinvoiceid = vExtInvoiceID) <span class="kwrd">THEN</span>
        <span class="rem">-- TEST</span>
        vPaymentID := (<span class="kwrd">select</span> paymentid <span class="kwrd">from</span> payment <span class="kwrd">where</span> ExtInvoiceID = vExtInvoiceID);
        perform <span class="kwrd">public</span>.createlog(0,<span class="str">'START Updated Payment sucessfully'</span>, <span class="str">'SetPayment'</span>,
                                <span class="str">'PaymentID: '</span> || <span class="kwrd">cast</span>(vPaymentID <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', PaymentInvoiceID: '</span> || <span class="kwrd">cast</span>(vPaymentInvoiceID <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', BitcoinTransaction: '</span> || <span class="kwrd">coalesce</span>(vBitcoinTransaction, <span class="str">'no BitcoinTransaction'</span>)
                || <span class="str">', Confidence State: '</span> || <span class="kwrd">coalesce</span>(vconfidencestate, <span class="str">'no value'</span>)
                || <span class="str">', Depth: '</span> || <span class="kwrd">coalesce</span>(<span class="kwrd">cast</span>(vDepth <span class="kwrd">as</span> <span class="kwrd">varchar</span>), <span class="str">'no value'</span>)
                || <span class="str">', ExtInvoiceID: '</span> || <span class="kwrd">cast</span>(vExtInvoiceId <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', CreatedBy: '</span> || <span class="kwrd">cast</span>(vuseruuid <span class="kwrd">as</span> <span class="kwrd">varchar</span>));
        <span class="rem">-- update</span>
        <span class="rem">--Proof if ConfidenceState is Pending and PayDate is null</span>
        <span class="kwrd">IF</span> ((<span class="kwrd">LOWER</span>(vConfidenceState) = <span class="kwrd">LOWER</span>(<span class="str">'Pending'</span>) <span class="kwrd">or</span> <span class="kwrd">LOWER</span>(vConfidenceState) = <span class="kwrd">LOWER</span>(<span class="str">'building'</span>))
            <span class="kwrd">and</span> (<span class="kwrd">select</span> 1 <span class="kwrd">from</span> payment <span class="kwrd">where</span> extinvoiceid = vExtInvoiceID <span class="kwrd">and</span> PayDate <span class="kwrd">is</span> <span class="kwrd">null</span>)::<span class="kwrd">integer</span>=1) <span class="kwrd">THEN</span>
            vPayDate := now();
        <span class="kwrd">ELSE</span> vPayDate := (<span class="kwrd">select</span> paydate <span class="kwrd">from</span> payment <span class="kwrd">where</span> extinvoiceid = vExtInvoiceID);
        <span class="kwrd">END</span> <span class="kwrd">IF</span>;
        <span class="kwrd">update</span> payment <span class="kwrd">set</span> ConfidenceState = vConfidenceState, <span class="kwrd">Depth</span> = vDepth, bitcointransaction = vbitcointransaction,
        PayDate = vPayDate, updatedat = now(), updatedby = vuseruuid
        <span class="kwrd">where</span> ExtInvoiceID = vExtInvoiceID;

        vPaymentID := (<span class="kwrd">select</span> paymentid <span class="kwrd">from</span> payment <span class="kwrd">where</span> ExtInvoiceID = vExtInvoiceID);
        <span class="rem">-- Begin Log if success</span>
        perform <span class="kwrd">public</span>.createlog(0,<span class="str">'END Updated Payment sucessfully'</span>, <span class="str">'SetPayment'</span>,
                                <span class="str">'PaymentID: '</span> || <span class="kwrd">cast</span>(vPaymentID <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', PaymentInvoiceID: '</span> || <span class="kwrd">cast</span>(vPaymentInvoiceID <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', BitcoinTransaction: '</span> || <span class="kwrd">coalesce</span>(vBitcoinTransaction, <span class="str">'no BitcoinTransaction'</span>)
                || <span class="str">', Confidence State: '</span> || <span class="kwrd">coalesce</span>(vconfidencestate, <span class="str">'no value'</span>)
                || <span class="str">', Depth: '</span> || <span class="kwrd">coalesce</span>(<span class="kwrd">cast</span>(vDepth <span class="kwrd">as</span> <span class="kwrd">varchar</span>), <span class="str">'no value'</span>)
                || <span class="str">', ExtInvoiceID: '</span> || <span class="kwrd">cast</span>(vExtInvoiceId <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', CreatedBy: '</span> || <span class="kwrd">cast</span>(vuseruuid <span class="kwrd">as</span> <span class="kwrd">varchar</span>));

        <span class="rem">-- End Log if success</span>

    <span class="kwrd">ELSE</span>
        <span class="rem">-- Insert</span>
         vPaymentID := (<span class="kwrd">select</span> nextval(<span class="str">'PaymentID'</span>));
        <span class="kwrd">IF</span> (<span class="kwrd">LOWER</span>(vConfidenceState) = <span class="kwrd">LOWER</span>(<span class="str">'Pending'</span>) <span class="kwrd">or</span> <span class="kwrd">LOWER</span>(vConfidenceState) = <span class="kwrd">LOWER</span>(<span class="str">'building'</span>)) <span class="kwrd">THEN</span>
            vPayDate := now();
        <span class="kwrd">ELSE</span>     vPayDate := <span class="kwrd">null</span>;
        <span class="kwrd">END</span> <span class="kwrd">IF</span>;
        <span class="kwrd">INSERT</span> <span class="kwrd">INTO</span> payment(paymentid, paymentuuid, paymentinvoiceid, paydate, bitcointransaction,
                    createdby, <span class="kwrd">depth</span>, confidencestate, extinvoiceid,
                    createdat)
            <span class="kwrd">VALUES</span> (vPaymentID, vPaymentUUID, vPaymentInvoiceID, vPayDate, vbitcointransaction,
            vuseruuid, vDepth, vConfidenceState, vExtInvoiceID, now());

            <span class="rem">-- Update Transactions table</span>
        <span class="kwrd">UPDATE</span> Transactions <span class="kwrd">SET</span> PaymentID = vPaymentID, UpdatedAt = now(), UpdatedBy = vuseruuid
        <span class="kwrd">WHERE</span> TransactionID = vTransactionID;

        <span class="rem">-- Begin Log if success</span>
        perform <span class="kwrd">public</span>.createlog(0,<span class="str">'Created Payment sucessfully'</span>, <span class="str">'SetPayment'</span>,
                                <span class="str">'PaymentID: '</span> || <span class="kwrd">cast</span>(vPaymentID <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', PaymentInvoiceID: '</span> || <span class="kwrd">cast</span>(vPaymentInvoiceID <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', BitcoinTransaction: '</span> || <span class="kwrd">coalesce</span>(vBitcoinTransaction, <span class="str">'no BitcoinTransaction'</span>)
                || <span class="str">', Confidence State: '</span> || <span class="kwrd">coalesce</span>(vconfidencestate, <span class="str">'no value'</span>)
                || <span class="str">', Depth: '</span> || <span class="kwrd">coalesce</span>(<span class="kwrd">cast</span>(vDepth <span class="kwrd">as</span> <span class="kwrd">varchar</span>), <span class="str">'no value'</span>)
                || <span class="str">', ExtInvoiceID: '</span> || <span class="kwrd">cast</span>(vExtInvoiceId <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', CreatedBy: '</span> || <span class="kwrd">cast</span>(vuseruuid <span class="kwrd">as</span> <span class="kwrd">varchar</span>));

        <span class="rem">-- End Log if success</span>

        <span class="kwrd">END</span> <span class="kwrd">IF</span>;
    <span class="kwrd">ELSE</span>
         RAISE <span class="kwrd">EXCEPTION</span> <span class="str">'%'</span>, <span class="str">'Insufficiency rigths'</span>;
         <span class="kwrd">RETURN</span>;
    <span class="kwrd">END</span> <span class="kwrd">IF</span>;

        <span class="rem">-- Return PaymentID</span>
        <span class="kwrd">RETURN</span> QUERY (
            <span class="kwrd">select</span>     PaymentUUID,
                pi.PaymentInvoiceUUID,
                paydate <span class="kwrd">at</span> <span class="kwrd">time</span> <span class="kwrd">zone</span> <span class="str">'utc'</span>,
                bitcointransaction,
                confidencestate,
                <span class="kwrd">depth</span>,
                extinvoiceid,
                py.CreatedBy <span class="kwrd">as</span> CreatedBy,
                py.createdat <span class="kwrd">at</span> <span class="kwrd">time</span> <span class="kwrd">zone</span> <span class="str">'utc'</span>,
                py.UpdatedBy <span class="kwrd">as</span> UpdatedBy,
                py.updatedat <span class="kwrd">at</span> <span class="kwrd">time</span> <span class="kwrd">zone</span> <span class="str">'utc'</span>
            <span class="kwrd">from</span> payment py <span class="kwrd">join</span>
            paymentinvoice pi <span class="kwrd">on</span>
            py.paymentinvoiceid = pi.paymentinvoiceid
            <span class="kwrd">where</span> extinvoiceid = vExtInvoiceID
        );

        <span class="kwrd">exception</span> <span class="kwrd">when</span> others <span class="kwrd">then</span>
        <span class="rem">-- Begin Log if error</span>
        perform <span class="kwrd">public</span>.createlog(1,<span class="str">'ERROR: '</span> || SQLERRM || <span class="str">' '</span> || <span class="kwrd">SQLSTATE</span>,<span class="str">'SetPayment'</span>,
                                <span class="str">'PaymentID: '</span> || <span class="kwrd">cast</span>(vPaymentID <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', PaymentInvoiceID: '</span> || <span class="kwrd">cast</span>(vPaymentInvoiceID <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', BitcoinTransaction: '</span> || <span class="kwrd">coalesce</span>(vBitcoinTransaction, <span class="str">'no BitcoinTransaction'</span>)
                || <span class="str">', Confidence State: '</span> || <span class="kwrd">coalesce</span>(vconfidencestate, <span class="str">'no value'</span>)
                || <span class="str">', Depth: '</span> || <span class="kwrd">coalesce</span>(<span class="kwrd">cast</span>(vDepth <span class="kwrd">as</span> <span class="kwrd">varchar</span>), <span class="str">'no value'</span>)
                || <span class="str">', ExtInvoiceID: '</span> || <span class="kwrd">cast</span>(vExtInvoiceId <span class="kwrd">as</span> <span class="kwrd">varchar</span>)
                || <span class="str">', CreatedBy: '</span> || <span class="kwrd">cast</span>(vuseruuid <span class="kwrd">as</span> <span class="kwrd">varchar</span>));
        <span class="rem">-- End Log if error</span>
        RAISE <span class="kwrd">EXCEPTION</span> <span class="str">'%'</span>, <span class="str">'ERROR: '</span> || SQLERRM || <span class="str">' '</span> || <span class="kwrd">SQLSTATE</span> || <span class="str">' at SetPayment'</span>;
        <span class="kwrd">RETURN</span> ;
      <span class="kwrd">END</span>;
  $$;


</pre></div><p style="page-break-after:always" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><br /><br /><div id="copy_url_div"><center><a href="javascript:void(0)" onclick="copyToClipboard(document.URL)">copy URL to clipboard (IE only)</a></center><br /></div><center>Documentation generated by <a target="_blank" href="http://elsasoft.com">SqlSpec</a></center></p></body></html>