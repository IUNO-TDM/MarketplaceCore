{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "MarketplaceCore Database Rest API",
    "contact": {
      "name": "TRUMPF Werkzeugmaschinen GmbH & Co KG"
    },
    "description": ""
  },
  "host": "localhost:3001",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Core_Auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "http://localhost:3005/oauth/authorise",
      "tokenUrl": "http://localhost:3006/oauth/token",
      "scopes": {
        "default": "Undefined",
        "dashboard": "view dashboard",
        "createRecipe": "create a recipe",
        "viewRecipe": "view a recipe",
        "viewSecureRecipe": "view a secure recipe",
        "editRecipe": "edit a recipe",
        "editSecureRecipe": "edit a secure recipe",
        "viewUserProfile": "view the user profile",
        "editUserProfile": "edit user profile",
        "admin": "admin ui"
      }
    }
  },
  "paths": {
    "/technologydata": {
      "post": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "Create technology data",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TechnologyDataSaveDataBody"
            }
          },
          {
            "name": "userUUID",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Operation successful",
            "headers": {
              "location": {
                "description": "The path to the technologydata (technologydatauuid)",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/TechnologyData"
            }
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "Authentication required"
          }
        }
      },
      "get": {
        "description": "Gets a list of technologydata",
        "parameters": [
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client useruuid used for authorization",
            "required": true,
            "type": "integer"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "components",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "technologies",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TechnologyData"
              }
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/technologydata/{technologyDataId}": {
      "get": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "Gets the technology data for a specific identifier",
        "parameters": [
          {
            "name": "technologyDataId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userid for authorization",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TechnologyData"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "401": {
            "description": "Authorization required"
          },
          "404": {
            "description": "technologydata not found"
          }
        }
      }
    },
    "/technologydata/{technologyDataId}/image": {
      "get": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "The image for a specific technology data",
        "parameters": [
          {
            "name": "technologyDataId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userUUID for authorization",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "404": {
            "description": "Image not found"
          }
        }
      }
    },
    "/technologydata/{technologyDataId}/components": {
      "get": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "The image for a specific technology data",
        "parameters": [
          {
            "name": "technologyDataId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userUUID for authorization",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TechnologyData"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "technologydata not found"
          }
        }
      }
    },
    "/offers": {
      "post": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "Create a new offer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferRequestBody"
            }
          },
          {
            "name": "userUUID",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/offers/{id}": {
      "get": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "Get a offer based on the id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "offerid to search for",
            "required": true,
            "type": "string"
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userUUID for authorization",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Offer"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "offer not found"
          }
        }
      }
    },
    "/components": {
      "post": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "Create a new component",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Components"
            }
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userid used for authorization",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "Operation successful",
            "headers": {
              "location": {
                "description": "The path to the component (componentuuid)",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Components"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "get": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "Get component for the given componentName or get all components",
        "parameters": [
          {
            "name": "componentName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userid used for authorization",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/Components"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/components/{id}": {
      "get": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "Get component for the given id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userid used for authorization",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/Components"
            }
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "component not found"
          }
        }
      }
    },
    "/vault/users/{userId}/balance": {
      "get": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "returns the current balance of the license fee income in the vault for a given User UUID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "the user id for which the balance is displayed",
            "required": true,
            "type": "string"
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userid used for authorization",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "the balance in coin",
            "schema": {
              "type": "integer"
            }
          },
          "404": {
            "description": "the user is unknown"
          }
        }
      }
    },
    "/vault/users/{userId}/wallets": {
      "get": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "returns the vault wallets for a user UUID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "the user id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userid used for authorization",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "the balance in coin",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wallet"
              }
            }
          },
          "404": {
            "description": "the user is unknown"
          }
        }
      }
    },
    "/vault/users/{userId}/wallets/{walletId}/payouts": {
      "post": {
        "security": [
          {
            "Core_Auth": [
              "default"
            ]
          }
        ],
        "description": "create a payout at the vault for a user and its wallet",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "the user id",
            "required": true,
            "type": "string"
          },
          {
            "name": "walletId",
            "in": "path",
            "description": "the wallet id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userUUID",
            "in": "query",
            "description": "system client userid used for authorization",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "the payout to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payout"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the created Payout",
            "schema": {
              "$ref": "#/definitions/Payout"
            }
          },
          "404": {
            "description": "the user is unknown"
          }
        }
      }
    }
  },
  "definitions": {
    "Payout": {
      "description": "object describing a payout job",
      "type": "object",
      "properties": {
        "payoutId": {
          "type": "string",
          "format": "uuid"
        },
        "payoutAddress": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "emptyWallet": {
          "type": "boolean",
          "description": "if true, the amount value will be the maximum value paid out. but it will also payout if there is less balance in the wallet"
        },
        "referenceId": {
          "type": "string",
          "description": "a place to put describing information"
        }
      }
    },
    "Wallet": {
      "type": "object",
      "properties": {
        "walletId": {
          "type": "string",
          "format": "UUID"
        },
        "unconfirmed": {
          "type": "number"
        },
        "confirmed": {
          "type": "number"
        }
      }
    },
    "Offer": {
      "type": "object",
      "properties": {
        "offeruuid": {
          "type": "string"
        },
        "paymentinvoiceuuid": {
          "type": "string"
        },
        "createdat": {
          "type": "string"
        },
        "createdby": {
          "type": "string"
        }
      }
    },
    "TechnologyDataSaveDataBody": {
      "type": "object",
      "properties": {
        "technologyDataName": {
          "type": "string"
        },
        "technologyData": {
          "type": "string"
        },
        "technologyDataDescription": {
          "type": "string"
        },
        "technologyUUID": {
          "type": "string"
        },
        "licenseFee": {
          "type": "number"
        },
        "retailPrice": {
          "type": "number"
        },
        "tagList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tagName": {
                "type": "string"
              }
            }
          }
        },
        "componentList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "componentName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "TechnologyData": {
      "type": "object",
      "properties": {
        "technologydataid": {
          "type": "integer"
        },
        "technologydataname": {
          "type": "string"
        },
        "technologydatadescription": {
          "type": "string"
        },
        "licensefee": {
          "type": "number"
        },
        "createdat": {
          "type": "string"
        },
        "createdby": {
          "type": "string"
        },
        "updatedat": {
          "type": "string"
        },
        "updatedby": {
          "type": "string"
        }
      }
    },
    "OfferRequestBody": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dataId": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              }
            }
          }
        },
        "hsmId": {
          "type": "string"
        }
      }
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "invoice": {
          "type": "string"
        }
      }
    },
    "Components": {
      "type": "object",
      "properties": {
        "componentName": {
          "type": "string"
        },
        "componentParentName": {
          "type": "string"
        },
        "componentDescription": {
          "type": "string"
        },
        "attributeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technologyList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}